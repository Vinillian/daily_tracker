.\app.py:27:11: W292 no newline at end of file
    main()          ^
.\check_python_only.py:2:1: F401 'sys' imported but unused
import sys
^
.\check_python_only.py:30:11: W292 no newline at end of file
    main()          ^
.\core\config.py:26:80: E501 line too long (80 > 79 characters)
        return Path(self._data.get('save_path', "~/DailyTracker/")).expanduser()
                                                                               ^
.\core\config.py:38:18: W292 no newline at end of file
config = Config()                 ^
.\core\constants.py:30:80: E501 line too long (119 > 79 characters)
    "ЁЯй║ ╨Ч╨┤╨╛╤А╨╛╨▓╤М╨╡": ["ЁЯй║", "ЁЯЪС", "ЁЯТК", "╨▓╤А╨░╤З", "╨▒╨╛╨╗╤М╨╜╨╕╤Ж", "╨╖╨┤╨╛╤А╨╛╨▓╤М", "╨╜╨╡╨╣╤А╨╛╤Е╨╕╤А╤Г╤А╨│", "╨┐╤А╨╕╤С╨╝", "╨║╨╛╨╜╤Б╤Г╨╗╤М╤В╨░╤Ж╨╕╤П", "╨┤╨╕╨░╨│╨╜╨╛╤Б╤В╨╕╨║╨░"],
                                                                               ^
.\core\constants.py:31:80: E501 line too long (81 > 79 characters)
    "ЁЯТ╝ ╨а╨░╨▒╨╛╤В╨░": ["ЁЯУж", "ЁЯТ╝", "ЁЯЪЪ", "╨║╤Г╤А╤М╨╡╤А", "╤А╨░╨▒╨╛╤В", "╨┤╨╛╤Е╨╛╨┤", "╨╖╨░╤А╨░╨▒╨░╤В", "╨┐╤А╨╛╨╡╨║╤В"],
                                                                               ^
.\core\constants.py:32:80: E501 line too long (129 > 79 characters)
    "ЁЯУЪ ╨Ю╨▒╤Г╤З╨╡╨╜╨╕╨╡": ["ЁЯУЪ", "ЁЯзо", "ЁЯУЦ", "python", "╨╕╨╖╤Г╤З╨╡╨╜╨╕╨╡", "╨╗╨╡╨║╤Ж╨╕╤П", "╤З╤В╨╡╨╜╨╕╨╡", "╨╝╨░╤А╨║ ╨╗╤Г╤В╤Ж", "╨║╨╗╨░╤Б╤Б", "╨░╤В╤А╨╕╨▒╤Г╤В", "╨┐╤А╨╛╨│╤А╨░╨╝╨╝╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡"],
                                                                               ^
.\core\constants.py:33:80: E501 line too long (101 > 79 characters)
    "ЁЯзШ ╨Я╤А╨░╨║╤В╨╕╨║╨╕": ["ЁЯХЙя╕П", "ЁЯзШ", "тШпя╕П", "╨╝╨╡╨┤╨╕╤В╨░╤Ж", "╨╝╨░╨╜╤В╤А╨░", "╤А╨░╤Б╤В╤П╨╢╨║╨░", "╨┤╨░╨╛╤Б╨╕╨╖╨╝", "╨┤╤Г╤Е╨╛╨▓╨╜", "╨┐╤А╨░╨║╤В╨╕╨║"],
                                                                               ^
.\core\constants.py:34:80: E501 line too long (96 > 79 characters)
    "ЁЯПа ╨С╤Л╤В": ["ЁЯПа", "ЁЯЫПя╕П", "тШХ", "ЁЯН╜я╕П", "ЁЯЫА", "╤Г╨▒╨╛╤А╨║", "╨╖╨░╨▓╤В╤А╨░╨║", "╤Г╨╢╨╕╨╜", "╤Б╨▒╨╛╤А", "╨┤╨╛╨║╤Г╨╝╨╡╨╜╤В", "╨┤╨╛╨╝"],
                                                                               ^
.\core\constants.py:35:80: E501 line too long (95 > 79 characters)
    "ЁЯОн ╨Ю╤В╨┤╤Л╤Е": ["ЁЯУ║", "ЁЯОм", "ЁЯЪ╢", "╤Б╨╡╤А╨╕╨░╨╗", "╨╛╤В╨┤╤Л╤Е", "╨┐╤А╨╛╨│╤Г╨╗╨║╨░", "╤А╨░╨╖╨│╨╛╨▓╨╛╤А", "╤Е╨╛╨▒╨▒╨╕", "╤А╨░╨╖╨▓╨╗╨╡╤З╨╡╨╜"]
                                                                               ^
.\core\constants.py:39:80: E501 line too long (96 > 79 characters)
TIME_SLOTS = [f"{hour:02d}:{minute:02d}" for hour in range(0, 24) for minute in [0, 15, 30, 45]]
                                                                               ^
.\core\constants.py:45:2: W292 no newline at end of file
] ^
.\core\exceptions.py:5:1: E302 expected 2 blank lines, found 1
class DataValidationError(DailyTrackerError):
^
.\core\exceptions.py:9:1: E302 expected 2 blank lines, found 1
class FileOperationError(DailyTrackerError):
^
.\core\exceptions.py:13:1: E302 expected 2 blank lines, found 1
class TemplateError(DailyTrackerError):
^
.\core\exceptions.py:17:1: E302 expected 2 blank lines, found 1
class ProjectNotFoundError(DailyTrackerError):
^
.\core\exceptions.py:21:1: E302 expected 2 blank lines, found 1
class DayNotFoundError(DailyTrackerError):
^
.\core\exceptions.py:23:9: W292 no newline at end of file
    pass        ^
.\core\validators.py:2:1: F401 'pathlib.Path' imported but unused
from pathlib import Path
^
.\core\validators.py:41:80: E501 line too long (84 > 79 characters)
                raise DataValidationError(f"╨Ю╤В╤Б╤Г╤В╤Б╤В╨▓╤Г╨╡╤В ╨╛╨▒╤П╨╖╨░╤В╨╡╨╗╤М╨╜╨╛╨╡ ╨┐╨╛╨╗╨╡: {field}")
                                                                               ^
.\core\validators.py:43:80: E501 line too long (87 > 79 characters)
        if not isinstance(task_data['╨╖╨░╨┤╨░╤З╨░'], str) or not task_data['╨╖╨░╨┤╨░╤З╨░'].strip():
                                                                               ^
.\core\validators.py:46:80: E501 line too long (95 > 79 characters)
        if not isinstance(task_data['╨┐╤А╨╛╨│╤А╨╡╤Б╤Б'], int) or not 0 <= task_data['╨┐╤А╨╛╨│╤А╨╡╤Б╤Б'] <= 100:
                                                                               ^
.\core\validators.py:47:80: E501 line too long (80 > 79 characters)
            raise DataValidationError("╨Я╤А╨╛╨│╤А╨╡╤Б╤Б ╨┤╨╛╨╗╨╢╨╡╨╜ ╨▒╤Л╤В╤М ╤З╨╕╤Б╨╗╨╛╨╝ ╨╛╤В 0 ╨┤╨╛ 100")
                                                                               ^
.\core\validators.py:56:80: E501 line too long (97 > 79 characters)
                raise DataValidationError(f"╨Ю╤В╤Б╤Г╤В╤Б╤В╨▓╤Г╨╡╤В ╨╛╨▒╤П╨╖╨░╤В╨╡╨╗╤М╨╜╨╛╨╡ ╨┐╨╛╨╗╨╡ ╨▓ ╨╝╨╡╤В╨░╨┤╨░╨╜╨╜╤Л╤Е: {field}")
                                                                               ^
.\core\validators.py:58:80: E501 line too long (89 > 79 characters)
        if not isinstance(metadata['╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡'], str) or not metadata['╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡'].strip():
                                                                               ^
.\core\validators.py:59:79: W292 no newline at end of file
            raise DataValidationError("╨Э╨░╨╖╨▓╨░╨╜╨╕╨╡ ╨┐╤А╨╛╨╡╨║╤В╨░ ╨╜╨╡ ╨╝╨╛╨╢╨╡╤В ╨▒╤Л╤В╤М ╨┐╤Г╤Б╤В╤Л╨╝")                                                                              ^
.\get_errors.py:2:1: F401 'sys' imported but unused
import sys
^
.\get_errors.py:72:44: W292 no newline at end of file
        print("\nЁЯОЙ ╨Т╤Б╨╡ ╨┐╤А╨╛╨▓╨╡╤А╨║╨╕ ╨┐╤А╨╛╨╣╨┤╨╡╨╜╤Л!")                                           ^
.\legacy\backup\diary_tab.py:64:1: E302 expected 2 blank lines, found 1
def progress_bar(percent: int):
^
.\legacy\backup\diary_tab.py:74:80: E501 line too long (123 > 79 characters)
        "ЁЯй║ ╨Ч╨┤╨╛╤А╨╛╨▓╤М╨╡": ["ЁЯй║", "ЁЯЪС", "ЁЯТК", "╨▓╤А╨░╤З", "╨▒╨╛╨╗╤М╨╜╨╕╤Ж", "╨╖╨┤╨╛╤А╨╛╨▓╤М", "╨╜╨╡╨╣╤А╨╛╤Е╨╕╤А╤Г╤А╨│", "╨┐╤А╨╕╤С╨╝", "╨║╨╛╨╜╤Б╤Г╨╗╤М╤В╨░╤Ж╨╕╤П", "╨┤╨╕╨░╨│╨╜╨╛╤Б╤В╨╕╨║╨░"],
                                                                               ^
.\legacy\backup\diary_tab.py:75:80: E501 line too long (85 > 79 characters)
        "ЁЯТ╝ ╨а╨░╨▒╨╛╤В╨░": ["ЁЯУж", "ЁЯТ╝", "ЁЯЪЪ", "╨║╤Г╤А╤М╨╡╤А", "╤А╨░╨▒╨╛╤В", "╨┤╨╛╤Е╨╛╨┤", "╨╖╨░╤А╨░╨▒╨░╤В", "╨┐╤А╨╛╨╡╨║╤В"],
                                                                               ^
.\legacy\backup\diary_tab.py:76:80: E501 line too long (133 > 79 characters)
        "ЁЯУЪ ╨Ю╨▒╤Г╤З╨╡╨╜╨╕╨╡": ["ЁЯУЪ", "ЁЯзо", "ЁЯУЦ", "python", "╨╕╨╖╤Г╤З╨╡╨╜╨╕╨╡", "╨╗╨╡╨║╤Ж╨╕╤П", "╤З╤В╨╡╨╜╨╕╨╡", "╨╝╨░╤А╨║ ╨╗╤Г╤В╤Ж", "╨║╨╗╨░╤Б╤Б", "╨░╤В╤А╨╕╨▒╤Г╤В", "╨┐╤А╨╛╨│╤А╨░╨╝╨╝╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡"],
                                                                               ^
.\legacy\backup\diary_tab.py:77:80: E501 line too long (105 > 79 characters)
        "ЁЯзШ ╨Я╤А╨░╨║╤В╨╕╨║╨╕": ["ЁЯХЙя╕П", "ЁЯзШ", "тШпя╕П", "╨╝╨╡╨┤╨╕╤В╨░╤Ж", "╨╝╨░╨╜╤В╤А╨░", "╤А╨░╤Б╤В╤П╨╢╨║╨░", "╨┤╨░╨╛╤Б╨╕╨╖╨╝", "╨┤╤Г╤Е╨╛╨▓╨╜", "╨┐╤А╨░╨║╤В╨╕╨║"],
                                                                               ^
.\legacy\backup\diary_tab.py:78:80: E501 line too long (100 > 79 characters)
        "ЁЯПа ╨С╤Л╤В": ["ЁЯПа", "ЁЯЫПя╕П", "тШХ", "ЁЯН╜я╕П", "ЁЯЫА", "╤Г╨▒╨╛╤А╨║", "╨╖╨░╨▓╤В╤А╨░╨║", "╤Г╨╢╨╕╨╜", "╤Б╨▒╨╛╤А", "╨┤╨╛╨║╤Г╨╝╨╡╨╜╤В", "╨┤╨╛╨╝"],
                                                                               ^
.\legacy\backup\diary_tab.py:79:80: E501 line too long (99 > 79 characters)
        "ЁЯОн ╨Ю╤В╨┤╤Л╤Е": ["ЁЯУ║", "ЁЯОм", "ЁЯЪ╢", "╤Б╨╡╤А╨╕╨░╨╗", "╨╛╤В╨┤╤Л╤Е", "╨┐╤А╨╛╨│╤Г╨╗╨║╨░", "╤А╨░╨╖╨│╨╛╨▓╨╛╤А", "╤Е╨╛╨▒╨▒╨╕", "╤А╨░╨╖╨▓╨╗╨╡╤З╨╡╨╜"]
                                                                               ^
.\legacy\backup\diary_tab.py:116:80: E501 line too long (89 > 79 characters)
                if isinstance(task, dict) and '╨║╨░╤В╨╡╨│╨╛╤А╨╕╤П' in task and '╨┐╤А╨╛╨│╤А╨╡╤Б╤Б' in task:
                                                                               ^
.\legacy\backup\diary_tab.py:138:80: E501 line too long (86 > 79 characters)
                if isinstance(task, dict) and '╨╖╨░╨┤╨░╤З╨░' in task and '╨┐╤А╨╛╨│╤А╨╡╤Б╤Б' in task:
                                                                               ^
.\legacy\backup\diary_tab.py:170:80: E501 line too long (84 > 79 characters)
                        task["╨║╨░╤В╨╡╨│╨╛╤А╨╕╤П"] = suggest_category(task.get("╨╖╨░╨┤╨░╤З╨░", ""))
                                                                               ^
.\legacy\backup\diary_tab.py:189:1: E303 too many blank lines (5)
def show_state_metrics(state_data):
^
.\legacy\backup\diary_tab.py:211:80: E501 line too long (87 > 79 characters)
            numeric_value = value.replace('%', '') if isinstance(value, str) else value
                                                                               ^
.\legacy\backup\diary_tab.py:247:80: E501 line too long (95 > 79 characters)
        summary_md = "| ╨Ъ╨░╤В╨╡╨│╨╛╤А╨╕╤П | ╨Я╤А╨╛╨│╤А╨╡╤Б╤Б | ╨б╤В╨░╤В╤Г╤Б |\n|-----------|:---------:|:-------:|\n"
                                                                               ^
.\legacy\backup\diary_tab.py:249:80: E501 line too long (99 > 79 characters)
        for cat_name, avg in sorted(explicit_categories.items(), key=lambda x: x[1], reverse=True):
                                                                               ^
.\legacy\backup\diary_tab.py:266:80: E501 line too long (95 > 79 characters)
        summary_md = "| ╨Ъ╨░╤В╨╡╨│╨╛╤А╨╕╤П | ╨Я╤А╨╛╨│╤А╨╡╤Б╤Б | ╨б╤В╨░╤В╤Г╤Б |\n|-----------|:---------:|:-------:|\n"
                                                                               ^
.\legacy\backup\diary_tab.py:301:80: E501 line too long (82 > 79 characters)
    with st.expander(f"{icon} {period_name} ({len(tasks)} ╨╖╨░╨┤╨░╤З)", expanded=True):
                                                                               ^
.\legacy\backup\diary_tab.py:339:80: E501 line too long (93 > 79 characters)
                        current_category) if current_category in get_all_categories() else 0,
                                                                               ^
.\legacy\backup\diary_tab.py:357:80: E501 line too long (82 > 79 characters)
                if st.button("тЭМ", key=f"{selected_day}_{period_name}_{i}_delete"):
                                                                               ^
.\legacy\backup\diary_tab.py:363:80: E501 line too long (104 > 79 characters)
        if st.button(f"тЮХ ╨Ф╨╛╨▒╨░╨▓╨╕╤В╤М ╨▓ {period_name}", key=f"add_{period_name}", use_container_width=True):
                                                                               ^
.\legacy\backup\diary_tab.py:366:80: E501 line too long (85 > 79 characters)
            default_time = time_suggestions[0] if time_suggestions else "09:00тАУ10:00"
                                                                               ^
.\legacy\backup\diary_tab.py:378:1: E302 expected 2 blank lines, found 1
def show_day_management(selected_day, day_data, day_file):
^
.\legacy\backup\diary_tab.py:386:80: E501 line too long (92 > 79 characters)
        if st.button("ЁЯТ╛ ╨б╨╛╤Е╤А╨░╨╜╨╕╤В╤М ╨▓╤Б╨╡ ╨╕╨╖╨╝╨╡╨╜╨╡╨╜╨╕╤П", use_container_width=True, type="primary"):
                                                                               ^
.\legacy\backup\diary_tab.py:402:80: E501 line too long (105 > 79 characters)
                "╨г╤В╤А╨╛": [{"╨╖╨░╨┤╨░╤З╨░": task["╨╖╨░╨┤╨░╤З╨░"], "╨▓╤А╨╡╨╝╤П": task["╨▓╤А╨╡╨╝╤П"], "╤Б╤В╨░╤В╤Г╤Б": "тШР", "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": 0}
                                                                               ^
.\legacy\backup\diary_tab.py:404:80: E501 line too long (105 > 79 characters)
                "╨Ф╨╡╨╜╤М": [{"╨╖╨░╨┤╨░╤З╨░": task["╨╖╨░╨┤╨░╤З╨░"], "╨▓╤А╨╡╨╝╤П": task["╨▓╤А╨╡╨╝╤П"], "╤Б╤В╨░╤В╤Г╤Б": "тШР", "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": 0}
                                                                               ^
.\legacy\backup\diary_tab.py:406:80: E501 line too long (106 > 79 characters)
                "╨Т╨╡╤З╨╡╤А": [{"╨╖╨░╨┤╨░╤З╨░": task["╨╖╨░╨┤╨░╤З╨░"], "╨▓╤А╨╡╨╝╤П": task["╨▓╤А╨╡╨╝╤П"], "╤Б╤В╨░╤В╤Г╤Б": "тШР", "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": 0}
                                                                               ^
.\legacy\backup\diary_tab.py:423:80: E501 line too long (97 > 79 characters)
            body = st.text_input("ЁЯТк ╨в╨╡╨╗╨╛", value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯТк ╨в╨╡╨╗╨╛", ""),
                                                                               ^
.\legacy\backup\diary_tab.py:425:80: E501 line too long (105 > 79 characters)
            energy = st.text_input("ЁЯзШ ╨н╨╜╨╡╤А╨│╨╕╤П", value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯзШ ╨н╨╜╨╡╤А╨│╨╕╤П", ""),
                                                                               ^
.\legacy\backup\diary_tab.py:427:80: E501 line too long (116 > 79 characters)
            digestion = st.text_input("ЁЯТи ╨Я╨╕╤Й╨╡╨▓╨░╤А╨╡╨╜╨╕╨╡", value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯТи ╨Я╨╕╤Й╨╡╨▓╨░╤А╨╡╨╜╨╕╨╡", ""),
                                                                               ^
.\legacy\backup\diary_tab.py:432:80: E501 line too long (104 > 79 characters)
                                          value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯза ╨Ъ╨╛╨╜╤Ж╨╡╨╜╤В╤А╨░╤Ж╨╕╤П", ""),
                                                                               ^
.\legacy\backup\diary_tab.py:433:80: E501 line too long (80 > 79 characters)
                                          placeholder="╨г╤А╨╛╨▓╨╡╨╜╤М ╨║╨╛╨╜╤Ж╨╡╨╜╤В╤А╨░╤Ж╨╕╨╕...")
                                                                               ^
.\legacy\backup\diary_tab.py:434:80: E501 line too long (109 > 79 characters)
            mood = st.text_input("ЁЯМ┐ ╨Э╨░╤Б╤В╤А╨╛╨╡╨╜╨╕╨╡", value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯМ┐ ╨Э╨░╤Б╤В╤А╨╛╨╡╨╜╨╕╨╡", ""),
                                                                               ^
.\legacy\backup\diary_tab.py:436:80: E501 line too long (120 > 79 characters)
            weather_factor = st.text_input("ЁЯМжя╕П ╨д╨░╨║╤В╨╛╤А", value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯМжя╕П ╨д╨░╨║╤В╨╛╤А ╨┐╨╛╨│╨╛╨┤╤Л", ""),
                                                                               ^
.\legacy\backup\diary_tab.py:440:80: E501 line too long (82 > 79 characters)
        notes_text = st.text_area("╨Ч╨░╨╝╨╡╤В╨║╨╕ ╨╕ ╨╕╨╜╤Б╨░╨╣╤В╤Л ╨┤╨╜╤П (╨║╨░╨╢╨┤╨░╤П ╤Б ╨╜╨╛╨▓╨╛╨╣ ╤Б╤В╤А╨╛╨║╨╕)",
                                                                               ^
.\legacy\backup\diary_tab.py:441:80: E501 line too long (114 > 79 characters)
                                  value="\n".join(day_data.get("╨Ч╨░╨╝╨╡╤В╨║╨╕", [])) if day_data.get("╨Ч╨░╨╝╨╡╤В╨║╨╕") else "",
                                                                               ^
.\legacy\backup\diary_tab.py:443:80: E501 line too long (92 > 79 characters)
                                  placeholder="╨Ч╨░╨┐╨╕╤И╨╕╤В╨╡ ╨▓╨░╤И╨╕ ╨╝╤Л╤Б╨╗╨╕, ╨╕╨╜╤Б╨░╨╣╤В╤Л, ╨╜╨░╨▒╨╗╤О╨┤╨╡╨╜╨╕╤П...")
                                                                               ^
.\legacy\backup\diary_tab.py:445:80: E501 line too long (82 > 79 characters)
        if st.button("ЁЯТ╛ ╨б╨╛╤Е╤А╨░╨╜╨╕╤В╤М ╤Б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡ ╨╕ ╨╖╨░╨╝╨╡╤В╨║╨╕", use_container_width=True):
                                                                               ^
.\legacy\backup\diary_tab.py:458:80: E501 line too long (103 > 79 characters)
                day_data["╨Ч╨░╨╝╨╡╤В╨║╨╕"] = [note.strip() for note in notes_text.split('\n') if note.strip()]
                                                                               ^
.\legacy\backup\diary_tab.py:483:80: E501 line too long (103 > 79 characters)
    view_mode = st.sidebar.radio("╨а╨╡╨╢╨╕╨╝ ╨┐╤А╨╛╤Б╨╝╨╛╤В╤А╨░:", ["ЁЯУЕ ╨Ъ╨░╨╗╨╡╨╜╨┤╨░╤А╤М", "ЁЯУЛ ╨б╨┐╨╕╤Б╨╛╨║ ╨┤╨╜╨╡╨╣"], horizontal=True)
                                                                               ^
.\legacy\backup\diary_tab.py:486:80: E501 line too long (112 > 79 characters)
        selected_date = st.sidebar.date_input("╨Т╤Л╨▒╨╡╤А╨╕╤В╨╡ ╨┤╨╡╨╜╤М", value=date.today(), label_visibility="collapsed")
                                                                               ^
.\legacy\backup\diary_tab.py:490:80: E501 line too long (83 > 79 characters)
        all_days = sorted([f.stem for f in DIARY_DIR.glob("*.json")], reverse=True)
                                                                               ^
.\legacy\backup\diary_tab.py:492:80: E501 line too long (95 > 79 characters)
            selected_day = st.sidebar.selectbox("╨Т╤Л╨▒╨╡╤А╨╕╤В╨╡ ╨┤╨╡╨╜╤М", all_days, key="day_selection",
                                                                               ^
.\legacy\backup\diary_tab.py:505:80: E501 line too long (98 > 79 characters)
            empty_template = {"╨г╤В╤А╨╛": [], "╨Ф╨╡╨╜╤М": [], "╨Т╨╡╤З╨╡╤А": [], "╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡": {}, "╨Ч╨░╨╝╨╡╤В╨║╨╕": []}
                                                                               ^
.\legacy\backup\diary_tab.py:520:80: E501 line too long (95 > 79 characters)
    new_day_name = st.sidebar.text_input("╨Э╨░╨╖╨▓╨░╨╜╨╕╨╡ ╨┤╨╜╤П (YYYY-MM-DD)", placeholder="2025-10-15")
                                                                               ^
.\legacy\backup\diary_tab.py:529:80: E501 line too long (96 > 79 characters)
        if st.sidebar.button("ЁЯУЕ ╨б╨╛╨╖╨┤╨░╤В╤М ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨░", use_container_width=True) and new_day_name:
                                                                               ^
.\legacy\backup\diary_tab.py:533:80: E501 line too long (103 > 79 characters)
            st.sidebar.success(f"╨Ф╨╡╨╜╤М '{new_day_name}' ╤Б╨╛╨╖╨┤╨░╨╜ ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨░ '{selected_daily_template}'!")
                                                                               ^
.\legacy\backup\diary_tab.py:538:80: E501 line too long (97 > 79 characters)
        if st.sidebar.button("ЁЯУД ╨б╨╛╨╖╨┤╨░╤В╤М ╨┐╤Г╤Б╤В╨╛╨╣ ╨┤╨╡╨╜╤М", use_container_width=True) and new_day_name:
                                                                               ^
.\legacy\backup\diary_tab.py:539:80: E501 line too long (98 > 79 characters)
            empty_template = {"╨г╤В╤А╨╛": [], "╨Ф╨╡╨╜╤М": [], "╨Т╨╡╤З╨╡╤А": [], "╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡": {}, "╨Ч╨░╨╝╨╡╤В╨║╨╕": []}
                                                                               ^
.\legacy\backup\diary_tab.py:549:80: E501 line too long (104 > 79 characters)
        period_select = st.sidebar.selectbox("╨Я╨╡╤А╨╕╨╛╨┤", ["╨г╤В╤А╨╛", "╨Ф╨╡╨╜╤М", "╨Т╨╡╤З╨╡╤А"], key="new_task_period")
                                                                               ^
.\legacy\backup\diary_tab.py:550:80: E501 line too long (115 > 79 characters)
        task_name = st.sidebar.text_input("╨Э╨░╨╖╨▓╨░╨╜╨╕╨╡ ╨╖╨░╨┤╨░╤З╨╕", key="new_task_name", placeholder="╨Ю╨┐╨╕╤Б╨░╨╜╨╕╨╡ ╨╖╨░╨┤╨░╤З╨╕...")
                                                                               ^
.\legacy\backup\diary_tab.py:568:80: E501 line too long (93 > 79 characters)
                    suggested_category) if suggested_category in get_all_categories() else 0,
                                                                               ^
.\legacy\backup\diary_tab.py:574:80: E501 line too long (109 > 79 characters)
            if st.sidebar.button("╨Ф╨╛╨▒╨░╨▓╨╕╤В╤М ╨╖╨░╨┤╨░╤З╤Г", use_container_width=True) and task_name and selected_day:
                                                                               ^
.\legacy\backup\diary_tab.py:599:80: E501 line too long (90 > 79 characters)
            show_tasks_compact("╨г╤В╤А╨╛", day_data["╨г╤В╤А╨╛"], selected_day, day_data, day_file)
                                                                               ^
.\legacy\backup\diary_tab.py:600:80: E501 line too long (90 > 79 characters)
            show_tasks_compact("╨Ф╨╡╨╜╤М", day_data["╨Ф╨╡╨╜╤М"], selected_day, day_data, day_file)
                                                                               ^
.\legacy\backup\diary_tab.py:601:80: E501 line too long (92 > 79 characters)
            show_tasks_compact("╨Т╨╡╤З╨╡╤А", day_data["╨Т╨╡╤З╨╡╤А"], selected_day, day_data, day_file)
                                                                               ^
.\legacy\backup\diary_tab.py:616:80: E501 line too long (87 > 79 characters)
            all_days = sorted([f.stem for f in DIARY_DIR.glob("*.json")], reverse=True)
                                                                               ^
.\legacy\backup\diary_tab.py:633:74: W292 no newline at end of file
                st.info("ЁЯСИ ╨Т╤Л╨▒╨╡╤А╨╕╤В╨╡ ╨┤╨╡╨╜╤М ╨┤╨╗╤П ╨┐╤А╨╛╤Б╨╝╨╛╤В╤А╨░ ╨▓ ╨▒╨╛╨║╨╛╨▓╨╛╨╣ ╨┐╨░╨╜╨╡╨╗╨╕")                                                                         ^
.\legacy\backup\file_utils.py:5:1: E302 expected 2 blank lines, found 1
def load_json(file_path: Path):
^
.\legacy\backup\file_utils.py:10:1: E302 expected 2 blank lines, found 1
def save_json(file_path: Path, data: dict):
^
.\legacy\backup\file_utils.py:11:80: E501 line too long (90 > 79 characters)
    file_path.write_text(json.dumps(data, ensure_ascii=False, indent=2), encoding="utf-8")
                                                                               ^
.\legacy\backup\file_utils.py:13:1: E302 expected 2 blank lines, found 1
def copy_template(template_path: Path, target_path: Path):
^
.\legacy\backup\file_utils.py:17:1: E302 expected 2 blank lines, found 1
def ensure_dir(path: Path):
^
.\legacy\backup\project_utils.py:13:80: E501 line too long (94 > 79 characters)
                    tasks.append({"╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡": task_name, "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": progress, "╤А╨░╨╖╨┤╨╡╨╗": key})
                                                                               ^
.\legacy\backup\project_utils.py:24:80: E501 line too long (95 > 79 characters)
                if isinstance(section, dict) and "╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡" in section and "╨╖╨░╨┤╨░╤З╨╕" in section:
                                                                               ^
.\legacy\backup\project_utils.py:27:80: E501 line too long (117 > 79 characters)
            sections[key] = [{"╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡": k, "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": v} for k, v in value.items() if isinstance(v, (int, float))]
                                                                               ^
.\legacy\backup\project_utils.py:44:41: W292 no newline at end of file
    return total_progress // total_tasks                                        ^
.\legacy\backup\projects_tab.py:4:1: F401 'utils.project_utils.get_project_tasks' imported but unused
from utils.project_utils import get_project_tasks, get_project_sections
^
.\legacy\backup\projects_tab.py:52:80: E501 line too long (97 > 79 characters)
    st.header(f"ЁЯЪА {metadata.get('╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡', project_name)} тАФ {metadata.get('╨▓╨╡╤А╤Б╨╕╤П', 'v1.0.0')}")
                                                                               ^
.\legacy\backup\projects_tab.py:64:80: E501 line too long (86 > 79 characters)
        st.markdown(f"`{get_progress_bar(section_progress)}` **{section_progress}%**")
                                                                               ^
.\legacy\backup\projects_tab.py:87:80: E501 line too long (106 > 79 characters)
        st.markdown(f"**ЁЯУИ GLOBAL PROGRESS:**    `{get_progress_bar(global_progress)}` {global_progress}%")
                                                                               ^
.\legacy\backup\projects_tab.py:91:80: E501 line too long (94 > 79 characters)
        st.markdown(f"**ЁЯза STABILITY INDEX:**    `{get_progress_bar(stability)}` {stability}%")
                                                                               ^
.\legacy\backup\projects_tab.py:118:80: E501 line too long (107 > 79 characters)
        new_name = st.text_input("╨Э╨░╨╖╨▓╨░╨╜╨╕╨╡", value=metadata.get('╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡', project_name), key="meta_name")
                                                                               ^
.\legacy\backup\projects_tab.py:120:80: E501 line too long (105 > 79 characters)
        new_version = st.text_input("╨Т╨╡╤А╤Б╨╕╤П", value=metadata.get('╨▓╨╡╤А╤Б╨╕╤П', 'v1.0.0'), key="meta_version")
                                                                               ^
.\legacy\backup\projects_tab.py:122:80: E501 line too long (111 > 79 characters)
        new_description = st.text_input("╨Ю╨┐╨╕╤Б╨░╨╜╨╕╨╡", value=metadata.get('╨╛╨┐╨╕╤Б╨░╨╜╨╕╨╡', ''), key="meta_description")
                                                                               ^
.\legacy\backup\projects_tab.py:142:80: E501 line too long (113 > 79 characters)
        st.markdown(f"**╨Ю╨▒╤Й╨╕╨╣ ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б ╤Б╨╡╨║╤Ж╨╕╨╕:** `{get_progress_bar(section_progress)}` **{section_progress}%**")
                                                                               ^
.\legacy\backup\projects_tab.py:239:80: E501 line too long (81 > 79 characters)
            index=["тЬЕ Stable", "тЪая╕П IndexedDB unstable", "тЭМ Not supported"].index(
                                                                               ^
.\legacy\backup\projects_tab.py:241:80: E501 line too long (108 > 79 characters)
            ) if overall.get('WEB_MODE') in ["тЬЕ Stable", "тЪая╕П IndexedDB unstable", "тЭМ Not supported"] else 1,
                                                                               ^
.\legacy\backup\projects_tab.py:262:80: E501 line too long (86 > 79 characters)
    all_projects = sorted([f.stem for f in PROJECTS_DIR.glob("*.json")], reverse=True)
                                                                               ^
.\legacy\backup\projects_tab.py:290:80: E501 line too long (83 > 79 characters)
                template_file = PROJECT_TEMPLATES_DIR / f"{selected_template}.json"
                                                                               ^
.\legacy\backup\projects_tab.py:293:80: E501 line too long (107 > 79 characters)
                st.sidebar.success(f"╨Я╤А╨╛╨╡╨║╤В '{new_project_name}' ╤Б╨╛╨╖╨┤╨░╨╜ ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨░ '{selected_template}'!")
                                                                               ^
.\legacy\backup\projects_tab.py:299:80: E501 line too long (82 > 79 characters)
        if st.sidebar.button("ЁЯУД ╨б╨╛╨╖╨┤╨░╤В╤М ╨┐╤Г╤Б╤В╨╛╨╣ ╨┐╤А╨╛╨╡╨║╤В", use_container_width=True):
                                                                               ^
.\legacy\backup\projects_tab.py:312:80: E501 line too long (86 > 79 characters)
                                {"╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡": "╨Ю╨┐╤А╨╡╨┤╨╡╨╗╨╡╨╜╨╕╨╡ ╤В╤А╨╡╨▒╨╛╨▓╨░╨╜╨╕╨╣", "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": 0},
                                                                               ^
.\legacy\backup\projects_tab.py:313:80: E501 line too long (89 > 79 characters)
                                {"╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡": "╨Я╤А╨╛╨╡╨║╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨░╤А╤Е╨╕╤В╨╡╨║╤В╤Г╤А╤Л", "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": 0}
                                                                               ^
.\legacy\backup\projects_tab.py:327:80: E501 line too long (81 > 79 characters)
                st.sidebar.success(f"╨Я╤Г╤Б╤В╨╛╨╣ ╨┐╤А╨╛╨╡╨║╤В '{new_project_name}' ╤Б╨╛╨╖╨┤╨░╨╜!")
                                                                               ^
.\legacy\backup\projects_tab.py:370:80: E501 line too long (83 > 79 characters)
            st.info("""
            ## ЁЯЪА ╨Ф╨╛╨▒╤А╨╛ ╨┐╨╛╨╢╨░╨╗╨╛╨▓╨░╤В╤М ╨▓ ╨╝╨╡╨╜╨╡╨┤╨╢╨╡╤А ╨┐╤А╨╛╨╡╨║╤В╨╛╨▓!

            ╨Ч╨┤╨╡╤Б╤М ╨▓╤Л ╨╝╨╛╨╢╨╡╤В╨╡:
            - ЁЯУК **╨Ю╤В╤Б╨╗╨╡╨╢╨╕╨▓╨░╤В╤М ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б** ╨▓╨░╤И╨╕╤Е ╨┐╤А╨╛╨╡╨║╤В╨╛╨▓ ╤Б ╨│╤А╨░╤Д╨╕╤З╨╡╤Б╨║╨╕╨╝╨╕ ╨╕╨╜╨┤╨╕╨║╨░╤В╨╛╤А╨░╨╝╨╕
            - ЁЯОп **╨б╨╛╨╖╨┤╨░╨▓╨░╤В╤М ╨┐╤А╨╛╨╡╨║╤В╤Л** ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨╛╨▓ ╨╕╨╗╨╕ ╤Б ╨╜╤Г╨╗╤П
            - ЁЯУИ **╨Т╨╕╨╖╤Г╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╤В╤М** ╤Б╤В╨░╤В╤Г╤Б ╨▓╤Л╨┐╨╛╨╗╨╜╨╡╨╜╨╕╤П ╨╖╨░╨┤╨░╤З
            - тЬПя╕П **╨а╨╡╨┤╨░╨║╤В╨╕╤А╨╛╨▓╨░╤В╤М** ╨╖╨░╨┤╨░╤З╨╕ ╤Б ╨┐╨╛╨╗╨╖╤Г╨╜╨║╨░╨╝╨╕ ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б╨░
            - тЭМ **╨г╨┤╨░╨╗╤П╤В╤М** ╨╜╨╡╨╜╤Г╨╢╨╜╤Л╨╡ ╨╖╨░╨┤╨░╤З╨╕

            **╨з╤В╨╛╨▒╤Л ╨╜╨░╤З╨░╤В╤М, ╤Б╨╛╨╖╨┤╨░╨╣╤В╨╡ ╨▓╨░╤И ╨┐╨╡╤А╨▓╤Л╨╣ ╨┐╤А╨╛╨╡╨║╤В ╨▓ ╨▒╨╛╨║╨╛╨▓╨╛╨╣ ╨┐╨░╨╜╨╡╨╗╨╕!**
            """)
                       
                                                      
^
.\legacy\backup\projects_tab.py:379:72: W292 no newline at end of file
            st.info("ЁЯСИ ╨Т╤Л╨▒╨╡╤А╨╕╤В╨╡ ╨┐╤А╨╛╨╡╨║╤В ╨┤╨╗╤П ╨┐╤А╨╛╤Б╨╝╨╛╤В╤А╨░ ╨▓ ╨▒╨╛╨║╨╛╨▓╨╛╨╣ ╨┐╨░╨╜╨╡╨╗╨╕")                                                                       ^
.\legacy\old_code\old_diary_tab.py:64:1: E302 expected 2 blank lines, found 1
def progress_bar(percent: int):
^
.\legacy\old_code\old_diary_tab.py:74:80: E501 line too long (123 > 79 characters)
        "ЁЯй║ ╨Ч╨┤╨╛╤А╨╛╨▓╤М╨╡": ["ЁЯй║", "ЁЯЪС", "ЁЯТК", "╨▓╤А╨░╤З", "╨▒╨╛╨╗╤М╨╜╨╕╤Ж", "╨╖╨┤╨╛╤А╨╛╨▓╤М", "╨╜╨╡╨╣╤А╨╛╤Е╨╕╤А╤Г╤А╨│", "╨┐╤А╨╕╤С╨╝", "╨║╨╛╨╜╤Б╤Г╨╗╤М╤В╨░╤Ж╨╕╤П", "╨┤╨╕╨░╨│╨╜╨╛╤Б╤В╨╕╨║╨░"],
                                                                               ^
.\legacy\old_code\old_diary_tab.py:75:80: E501 line too long (85 > 79 characters)
        "ЁЯТ╝ ╨а╨░╨▒╨╛╤В╨░": ["ЁЯУж", "ЁЯТ╝", "ЁЯЪЪ", "╨║╤Г╤А╤М╨╡╤А", "╤А╨░╨▒╨╛╤В", "╨┤╨╛╤Е╨╛╨┤", "╨╖╨░╤А╨░╨▒╨░╤В", "╨┐╤А╨╛╨╡╨║╤В"],
                                                                               ^
.\legacy\old_code\old_diary_tab.py:76:80: E501 line too long (133 > 79 characters)
        "ЁЯУЪ ╨Ю╨▒╤Г╤З╨╡╨╜╨╕╨╡": ["ЁЯУЪ", "ЁЯзо", "ЁЯУЦ", "python", "╨╕╨╖╤Г╤З╨╡╨╜╨╕╨╡", "╨╗╨╡╨║╤Ж╨╕╤П", "╤З╤В╨╡╨╜╨╕╨╡", "╨╝╨░╤А╨║ ╨╗╤Г╤В╤Ж", "╨║╨╗╨░╤Б╤Б", "╨░╤В╤А╨╕╨▒╤Г╤В", "╨┐╤А╨╛╨│╤А╨░╨╝╨╝╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡"],
                                                                               ^
.\legacy\old_code\old_diary_tab.py:77:80: E501 line too long (105 > 79 characters)
        "ЁЯзШ ╨Я╤А╨░╨║╤В╨╕╨║╨╕": ["ЁЯХЙя╕П", "ЁЯзШ", "тШпя╕П", "╨╝╨╡╨┤╨╕╤В╨░╤Ж", "╨╝╨░╨╜╤В╤А╨░", "╤А╨░╤Б╤В╤П╨╢╨║╨░", "╨┤╨░╨╛╤Б╨╕╨╖╨╝", "╨┤╤Г╤Е╨╛╨▓╨╜", "╨┐╤А╨░╨║╤В╨╕╨║"],
                                                                               ^
.\legacy\old_code\old_diary_tab.py:78:80: E501 line too long (100 > 79 characters)
        "ЁЯПа ╨С╤Л╤В": ["ЁЯПа", "ЁЯЫПя╕П", "тШХ", "ЁЯН╜я╕П", "ЁЯЫА", "╤Г╨▒╨╛╤А╨║", "╨╖╨░╨▓╤В╤А╨░╨║", "╤Г╨╢╨╕╨╜", "╤Б╨▒╨╛╤А", "╨┤╨╛╨║╤Г╨╝╨╡╨╜╤В", "╨┤╨╛╨╝"],
                                                                               ^
.\legacy\old_code\old_diary_tab.py:79:80: E501 line too long (99 > 79 characters)
        "ЁЯОн ╨Ю╤В╨┤╤Л╤Е": ["ЁЯУ║", "ЁЯОм", "ЁЯЪ╢", "╤Б╨╡╤А╨╕╨░╨╗", "╨╛╤В╨┤╤Л╤Е", "╨┐╤А╨╛╨│╤Г╨╗╨║╨░", "╤А╨░╨╖╨│╨╛╨▓╨╛╤А", "╤Е╨╛╨▒╨▒╨╕", "╤А╨░╨╖╨▓╨╗╨╡╤З╨╡╨╜"]
                                                                               ^
.\legacy\old_code\old_diary_tab.py:116:80: E501 line too long (89 > 79 characters)
                if isinstance(task, dict) and '╨║╨░╤В╨╡╨│╨╛╤А╨╕╤П' in task and '╨┐╤А╨╛╨│╤А╨╡╤Б╤Б' in task:
                                                                               ^
.\legacy\old_code\old_diary_tab.py:138:80: E501 line too long (86 > 79 characters)
                if isinstance(task, dict) and '╨╖╨░╨┤╨░╤З╨░' in task and '╨┐╤А╨╛╨│╤А╨╡╤Б╤Б' in task:
                                                                               ^
.\legacy\old_code\old_diary_tab.py:170:80: E501 line too long (84 > 79 characters)
                        task["╨║╨░╤В╨╡╨│╨╛╤А╨╕╤П"] = suggest_category(task.get("╨╖╨░╨┤╨░╤З╨░", ""))
                                                                               ^
.\legacy\old_code\old_diary_tab.py:189:1: E303 too many blank lines (5)
def show_state_metrics(state_data):
^
.\legacy\old_code\old_diary_tab.py:211:80: E501 line too long (87 > 79 characters)
            numeric_value = value.replace('%', '') if isinstance(value, str) else value
                                                                               ^
.\legacy\old_code\old_diary_tab.py:247:80: E501 line too long (95 > 79 characters)
        summary_md = "| ╨Ъ╨░╤В╨╡╨│╨╛╤А╨╕╤П | ╨Я╤А╨╛╨│╤А╨╡╤Б╤Б | ╨б╤В╨░╤В╤Г╤Б |\n|-----------|:---------:|:-------:|\n"
                                                                               ^
.\legacy\old_code\old_diary_tab.py:249:80: E501 line too long (99 > 79 characters)
        for cat_name, avg in sorted(explicit_categories.items(), key=lambda x: x[1], reverse=True):
                                                                               ^
.\legacy\old_code\old_diary_tab.py:266:80: E501 line too long (95 > 79 characters)
        summary_md = "| ╨Ъ╨░╤В╨╡╨│╨╛╤А╨╕╤П | ╨Я╤А╨╛╨│╤А╨╡╤Б╤Б | ╨б╤В╨░╤В╤Г╤Б |\n|-----------|:---------:|:-------:|\n"
                                                                               ^
.\legacy\old_code\old_diary_tab.py:301:80: E501 line too long (82 > 79 characters)
    with st.expander(f"{icon} {period_name} ({len(tasks)} ╨╖╨░╨┤╨░╤З)", expanded=True):
                                                                               ^
.\legacy\old_code\old_diary_tab.py:339:80: E501 line too long (93 > 79 characters)
                        current_category) if current_category in get_all_categories() else 0,
                                                                               ^
.\legacy\old_code\old_diary_tab.py:357:80: E501 line too long (82 > 79 characters)
                if st.button("тЭМ", key=f"{selected_day}_{period_name}_{i}_delete"):
                                                                               ^
.\legacy\old_code\old_diary_tab.py:363:80: E501 line too long (104 > 79 characters)
        if st.button(f"тЮХ ╨Ф╨╛╨▒╨░╨▓╨╕╤В╤М ╨▓ {period_name}", key=f"add_{period_name}", use_container_width=True):
                                                                               ^
.\legacy\old_code\old_diary_tab.py:366:80: E501 line too long (85 > 79 characters)
            default_time = time_suggestions[0] if time_suggestions else "09:00тАУ10:00"
                                                                               ^
.\legacy\old_code\old_diary_tab.py:378:1: E302 expected 2 blank lines, found 1
def show_day_management(selected_day, day_data, day_file):
^
.\legacy\old_code\old_diary_tab.py:386:80: E501 line too long (92 > 79 characters)
        if st.button("ЁЯТ╛ ╨б╨╛╤Е╤А╨░╨╜╨╕╤В╤М ╨▓╤Б╨╡ ╨╕╨╖╨╝╨╡╨╜╨╡╨╜╨╕╤П", use_container_width=True, type="primary"):
                                                                               ^
.\legacy\old_code\old_diary_tab.py:402:80: E501 line too long (105 > 79 characters)
                "╨г╤В╤А╨╛": [{"╨╖╨░╨┤╨░╤З╨░": task["╨╖╨░╨┤╨░╤З╨░"], "╨▓╤А╨╡╨╝╤П": task["╨▓╤А╨╡╨╝╤П"], "╤Б╤В╨░╤В╤Г╤Б": "тШР", "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": 0}
                                                                               ^
.\legacy\old_code\old_diary_tab.py:404:80: E501 line too long (105 > 79 characters)
                "╨Ф╨╡╨╜╤М": [{"╨╖╨░╨┤╨░╤З╨░": task["╨╖╨░╨┤╨░╤З╨░"], "╨▓╤А╨╡╨╝╤П": task["╨▓╤А╨╡╨╝╤П"], "╤Б╤В╨░╤В╤Г╤Б": "тШР", "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": 0}
                                                                               ^
.\legacy\old_code\old_diary_tab.py:406:80: E501 line too long (106 > 79 characters)
                "╨Т╨╡╤З╨╡╤А": [{"╨╖╨░╨┤╨░╤З╨░": task["╨╖╨░╨┤╨░╤З╨░"], "╨▓╤А╨╡╨╝╤П": task["╨▓╤А╨╡╨╝╤П"], "╤Б╤В╨░╤В╤Г╤Б": "тШР", "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": 0}
                                                                               ^
.\legacy\old_code\old_diary_tab.py:423:80: E501 line too long (97 > 79 characters)
            body = st.text_input("ЁЯТк ╨в╨╡╨╗╨╛", value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯТк ╨в╨╡╨╗╨╛", ""),
                                                                               ^
.\legacy\old_code\old_diary_tab.py:425:80: E501 line too long (105 > 79 characters)
            energy = st.text_input("ЁЯзШ ╨н╨╜╨╡╤А╨│╨╕╤П", value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯзШ ╨н╨╜╨╡╤А╨│╨╕╤П", ""),
                                                                               ^
.\legacy\old_code\old_diary_tab.py:427:80: E501 line too long (116 > 79 characters)
            digestion = st.text_input("ЁЯТи ╨Я╨╕╤Й╨╡╨▓╨░╤А╨╡╨╜╨╕╨╡", value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯТи ╨Я╨╕╤Й╨╡╨▓╨░╤А╨╡╨╜╨╕╨╡", ""),
                                                                               ^
.\legacy\old_code\old_diary_tab.py:432:80: E501 line too long (104 > 79 characters)
                                          value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯза ╨Ъ╨╛╨╜╤Ж╨╡╨╜╤В╤А╨░╤Ж╨╕╤П", ""),
                                                                               ^
.\legacy\old_code\old_diary_tab.py:433:80: E501 line too long (80 > 79 characters)
                                          placeholder="╨г╤А╨╛╨▓╨╡╨╜╤М ╨║╨╛╨╜╤Ж╨╡╨╜╤В╤А╨░╤Ж╨╕╨╕...")
                                                                               ^
.\legacy\old_code\old_diary_tab.py:434:80: E501 line too long (109 > 79 characters)
            mood = st.text_input("ЁЯМ┐ ╨Э╨░╤Б╤В╤А╨╛╨╡╨╜╨╕╨╡", value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯМ┐ ╨Э╨░╤Б╤В╤А╨╛╨╡╨╜╨╕╨╡", ""),
                                                                               ^
.\legacy\old_code\old_diary_tab.py:436:80: E501 line too long (120 > 79 characters)
            weather_factor = st.text_input("ЁЯМжя╕П ╨д╨░╨║╤В╨╛╤А", value=day_data.get("╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡", {}).get("ЁЯМжя╕П ╨д╨░╨║╤В╨╛╤А ╨┐╨╛╨│╨╛╨┤╤Л", ""),
                                                                               ^
.\legacy\old_code\old_diary_tab.py:440:80: E501 line too long (82 > 79 characters)
        notes_text = st.text_area("╨Ч╨░╨╝╨╡╤В╨║╨╕ ╨╕ ╨╕╨╜╤Б╨░╨╣╤В╤Л ╨┤╨╜╤П (╨║╨░╨╢╨┤╨░╤П ╤Б ╨╜╨╛╨▓╨╛╨╣ ╤Б╤В╤А╨╛╨║╨╕)",
                                                                               ^
.\legacy\old_code\old_diary_tab.py:441:80: E501 line too long (114 > 79 characters)
                                  value="\n".join(day_data.get("╨Ч╨░╨╝╨╡╤В╨║╨╕", [])) if day_data.get("╨Ч╨░╨╝╨╡╤В╨║╨╕") else "",
                                                                               ^
.\legacy\old_code\old_diary_tab.py:443:80: E501 line too long (92 > 79 characters)
                                  placeholder="╨Ч╨░╨┐╨╕╤И╨╕╤В╨╡ ╨▓╨░╤И╨╕ ╨╝╤Л╤Б╨╗╨╕, ╨╕╨╜╤Б╨░╨╣╤В╤Л, ╨╜╨░╨▒╨╗╤О╨┤╨╡╨╜╨╕╤П...")
                                                                               ^
.\legacy\old_code\old_diary_tab.py:445:80: E501 line too long (82 > 79 characters)
        if st.button("ЁЯТ╛ ╨б╨╛╤Е╤А╨░╨╜╨╕╤В╤М ╤Б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡ ╨╕ ╨╖╨░╨╝╨╡╤В╨║╨╕", use_container_width=True):
                                                                               ^
.\legacy\old_code\old_diary_tab.py:458:80: E501 line too long (103 > 79 characters)
                day_data["╨Ч╨░╨╝╨╡╤В╨║╨╕"] = [note.strip() for note in notes_text.split('\n') if note.strip()]
                                                                               ^
.\legacy\old_code\old_diary_tab.py:483:80: E501 line too long (103 > 79 characters)
    view_mode = st.sidebar.radio("╨а╨╡╨╢╨╕╨╝ ╨┐╤А╨╛╤Б╨╝╨╛╤В╤А╨░:", ["ЁЯУЕ ╨Ъ╨░╨╗╨╡╨╜╨┤╨░╤А╤М", "ЁЯУЛ ╨б╨┐╨╕╤Б╨╛╨║ ╨┤╨╜╨╡╨╣"], horizontal=True)
                                                                               ^
.\legacy\old_code\old_diary_tab.py:486:80: E501 line too long (112 > 79 characters)
        selected_date = st.sidebar.date_input("╨Т╤Л╨▒╨╡╤А╨╕╤В╨╡ ╨┤╨╡╨╜╤М", value=date.today(), label_visibility="collapsed")
                                                                               ^
.\legacy\old_code\old_diary_tab.py:490:80: E501 line too long (83 > 79 characters)
        all_days = sorted([f.stem for f in DIARY_DIR.glob("*.json")], reverse=True)
                                                                               ^
.\legacy\old_code\old_diary_tab.py:492:80: E501 line too long (95 > 79 characters)
            selected_day = st.sidebar.selectbox("╨Т╤Л╨▒╨╡╤А╨╕╤В╨╡ ╨┤╨╡╨╜╤М", all_days, key="day_selection",
                                                                               ^
.\legacy\old_code\old_diary_tab.py:505:80: E501 line too long (98 > 79 characters)
            empty_template = {"╨г╤В╤А╨╛": [], "╨Ф╨╡╨╜╤М": [], "╨Т╨╡╤З╨╡╤А": [], "╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡": {}, "╨Ч╨░╨╝╨╡╤В╨║╨╕": []}
                                                                               ^
.\legacy\old_code\old_diary_tab.py:520:80: E501 line too long (95 > 79 characters)
    new_day_name = st.sidebar.text_input("╨Э╨░╨╖╨▓╨░╨╜╨╕╨╡ ╨┤╨╜╤П (YYYY-MM-DD)", placeholder="2025-10-15")
                                                                               ^
.\legacy\old_code\old_diary_tab.py:529:80: E501 line too long (96 > 79 characters)
        if st.sidebar.button("ЁЯУЕ ╨б╨╛╨╖╨┤╨░╤В╤М ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨░", use_container_width=True) and new_day_name:
                                                                               ^
.\legacy\old_code\old_diary_tab.py:533:80: E501 line too long (103 > 79 characters)
            st.sidebar.success(f"╨Ф╨╡╨╜╤М '{new_day_name}' ╤Б╨╛╨╖╨┤╨░╨╜ ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨░ '{selected_daily_template}'!")
                                                                               ^
.\legacy\old_code\old_diary_tab.py:538:80: E501 line too long (97 > 79 characters)
        if st.sidebar.button("ЁЯУД ╨б╨╛╨╖╨┤╨░╤В╤М ╨┐╤Г╤Б╤В╨╛╨╣ ╨┤╨╡╨╜╤М", use_container_width=True) and new_day_name:
                                                                               ^
.\legacy\old_code\old_diary_tab.py:539:80: E501 line too long (98 > 79 characters)
            empty_template = {"╨г╤В╤А╨╛": [], "╨Ф╨╡╨╜╤М": [], "╨Т╨╡╤З╨╡╤А": [], "╨б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡": {}, "╨Ч╨░╨╝╨╡╤В╨║╨╕": []}
                                                                               ^
.\legacy\old_code\old_diary_tab.py:549:80: E501 line too long (104 > 79 characters)
        period_select = st.sidebar.selectbox("╨Я╨╡╤А╨╕╨╛╨┤", ["╨г╤В╤А╨╛", "╨Ф╨╡╨╜╤М", "╨Т╨╡╤З╨╡╤А"], key="new_task_period")
                                                                               ^
.\legacy\old_code\old_diary_tab.py:550:80: E501 line too long (115 > 79 characters)
        task_name = st.sidebar.text_input("╨Э╨░╨╖╨▓╨░╨╜╨╕╨╡ ╨╖╨░╨┤╨░╤З╨╕", key="new_task_name", placeholder="╨Ю╨┐╨╕╤Б╨░╨╜╨╕╨╡ ╨╖╨░╨┤╨░╤З╨╕...")
                                                                               ^
.\legacy\old_code\old_diary_tab.py:568:80: E501 line too long (93 > 79 characters)
                    suggested_category) if suggested_category in get_all_categories() else 0,
                                                                               ^
.\legacy\old_code\old_diary_tab.py:574:80: E501 line too long (109 > 79 characters)
            if st.sidebar.button("╨Ф╨╛╨▒╨░╨▓╨╕╤В╤М ╨╖╨░╨┤╨░╤З╤Г", use_container_width=True) and task_name and selected_day:
                                                                               ^
.\legacy\old_code\old_diary_tab.py:599:80: E501 line too long (90 > 79 characters)
            show_tasks_compact("╨г╤В╤А╨╛", day_data["╨г╤В╤А╨╛"], selected_day, day_data, day_file)
                                                                               ^
.\legacy\old_code\old_diary_tab.py:600:80: E501 line too long (90 > 79 characters)
            show_tasks_compact("╨Ф╨╡╨╜╤М", day_data["╨Ф╨╡╨╜╤М"], selected_day, day_data, day_file)
                                                                               ^
.\legacy\old_code\old_diary_tab.py:601:80: E501 line too long (92 > 79 characters)
            show_tasks_compact("╨Т╨╡╤З╨╡╤А", day_data["╨Т╨╡╤З╨╡╤А"], selected_day, day_data, day_file)
                                                                               ^
.\legacy\old_code\old_diary_tab.py:616:80: E501 line too long (87 > 79 characters)
            all_days = sorted([f.stem for f in DIARY_DIR.glob("*.json")], reverse=True)
                                                                               ^
.\legacy\old_code\old_diary_tab.py:633:74: W292 no newline at end of file
                st.info("ЁЯСИ ╨Т╤Л╨▒╨╡╤А╨╕╤В╨╡ ╨┤╨╡╨╜╤М ╨┤╨╗╤П ╨┐╤А╨╛╤Б╨╝╨╛╤В╤А╨░ ╨▓ ╨▒╨╛╨║╨╛╨▓╨╛╨╣ ╨┐╨░╨╜╨╡╨╗╨╕")                                                                         ^
.\legacy\old_code\old_file_utils.py:5:1: E302 expected 2 blank lines, found 1
def load_json(file_path: Path):
^
.\legacy\old_code\old_file_utils.py:10:1: E302 expected 2 blank lines, found 1
def save_json(file_path: Path, data: dict):
^
.\legacy\old_code\old_file_utils.py:11:80: E501 line too long (90 > 79 characters)
    file_path.write_text(json.dumps(data, ensure_ascii=False, indent=2), encoding="utf-8")
                                                                               ^
.\legacy\old_code\old_file_utils.py:13:1: E302 expected 2 blank lines, found 1
def copy_template(template_path: Path, target_path: Path):
^
.\legacy\old_code\old_file_utils.py:17:1: E302 expected 2 blank lines, found 1
def ensure_dir(path: Path):
^
.\legacy\old_code\old_project_utils.py:13:80: E501 line too long (94 > 79 characters)
                    tasks.append({"╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡": task_name, "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": progress, "╤А╨░╨╖╨┤╨╡╨╗": key})
                                                                               ^
.\legacy\old_code\old_project_utils.py:24:80: E501 line too long (95 > 79 characters)
                if isinstance(section, dict) and "╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡" in section and "╨╖╨░╨┤╨░╤З╨╕" in section:
                                                                               ^
.\legacy\old_code\old_project_utils.py:27:80: E501 line too long (117 > 79 characters)
            sections[key] = [{"╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡": k, "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": v} for k, v in value.items() if isinstance(v, (int, float))]
                                                                               ^
.\legacy\old_code\old_project_utils.py:44:41: W292 no newline at end of file
    return total_progress // total_tasks                                        ^
.\legacy\old_code\old_projects_tab.py:4:1: F401 'utils.project_utils.get_project_tasks' imported but unused
from utils.project_utils import get_project_tasks, get_project_sections
^
.\legacy\old_code\old_projects_tab.py:52:80: E501 line too long (97 > 79 characters)
    st.header(f"ЁЯЪА {metadata.get('╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡', project_name)} тАФ {metadata.get('╨▓╨╡╤А╤Б╨╕╤П', 'v1.0.0')}")
                                                                               ^
.\legacy\old_code\old_projects_tab.py:64:80: E501 line too long (86 > 79 characters)
        st.markdown(f"`{get_progress_bar(section_progress)}` **{section_progress}%**")
                                                                               ^
.\legacy\old_code\old_projects_tab.py:87:80: E501 line too long (106 > 79 characters)
        st.markdown(f"**ЁЯУИ GLOBAL PROGRESS:**    `{get_progress_bar(global_progress)}` {global_progress}%")
                                                                               ^
.\legacy\old_code\old_projects_tab.py:91:80: E501 line too long (94 > 79 characters)
        st.markdown(f"**ЁЯза STABILITY INDEX:**    `{get_progress_bar(stability)}` {stability}%")
                                                                               ^
.\legacy\old_code\old_projects_tab.py:118:80: E501 line too long (107 > 79 characters)
        new_name = st.text_input("╨Э╨░╨╖╨▓╨░╨╜╨╕╨╡", value=metadata.get('╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡', project_name), key="meta_name")
                                                                               ^
.\legacy\old_code\old_projects_tab.py:120:80: E501 line too long (105 > 79 characters)
        new_version = st.text_input("╨Т╨╡╤А╤Б╨╕╤П", value=metadata.get('╨▓╨╡╤А╤Б╨╕╤П', 'v1.0.0'), key="meta_version")
                                                                               ^
.\legacy\old_code\old_projects_tab.py:122:80: E501 line too long (111 > 79 characters)
        new_description = st.text_input("╨Ю╨┐╨╕╤Б╨░╨╜╨╕╨╡", value=metadata.get('╨╛╨┐╨╕╤Б╨░╨╜╨╕╨╡', ''), key="meta_description")
                                                                               ^
.\legacy\old_code\old_projects_tab.py:142:80: E501 line too long (113 > 79 characters)
        st.markdown(f"**╨Ю╨▒╤Й╨╕╨╣ ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б ╤Б╨╡╨║╤Ж╨╕╨╕:** `{get_progress_bar(section_progress)}` **{section_progress}%**")
                                                                               ^
.\legacy\old_code\old_projects_tab.py:239:80: E501 line too long (81 > 79 characters)
            index=["тЬЕ Stable", "тЪая╕П IndexedDB unstable", "тЭМ Not supported"].index(
                                                                               ^
.\legacy\old_code\old_projects_tab.py:241:80: E501 line too long (108 > 79 characters)
            ) if overall.get('WEB_MODE') in ["тЬЕ Stable", "тЪая╕П IndexedDB unstable", "тЭМ Not supported"] else 1,
                                                                               ^
.\legacy\old_code\old_projects_tab.py:262:80: E501 line too long (86 > 79 characters)
    all_projects = sorted([f.stem for f in PROJECTS_DIR.glob("*.json")], reverse=True)
                                                                               ^
.\legacy\old_code\old_projects_tab.py:290:80: E501 line too long (83 > 79 characters)
                template_file = PROJECT_TEMPLATES_DIR / f"{selected_template}.json"
                                                                               ^
.\legacy\old_code\old_projects_tab.py:293:80: E501 line too long (107 > 79 characters)
                st.sidebar.success(f"╨Я╤А╨╛╨╡╨║╤В '{new_project_name}' ╤Б╨╛╨╖╨┤╨░╨╜ ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨░ '{selected_template}'!")
                                                                               ^
.\legacy\old_code\old_projects_tab.py:299:80: E501 line too long (82 > 79 characters)
        if st.sidebar.button("ЁЯУД ╨б╨╛╨╖╨┤╨░╤В╤М ╨┐╤Г╤Б╤В╨╛╨╣ ╨┐╤А╨╛╨╡╨║╤В", use_container_width=True):
                                                                               ^
.\legacy\old_code\old_projects_tab.py:312:80: E501 line too long (86 > 79 characters)
                                {"╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡": "╨Ю╨┐╤А╨╡╨┤╨╡╨╗╨╡╨╜╨╕╨╡ ╤В╤А╨╡╨▒╨╛╨▓╨░╨╜╨╕╨╣", "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": 0},
                                                                               ^
.\legacy\old_code\old_projects_tab.py:313:80: E501 line too long (89 > 79 characters)
                                {"╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡": "╨Я╤А╨╛╨╡╨║╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨░╤А╤Е╨╕╤В╨╡╨║╤В╤Г╤А╤Л", "╨┐╤А╨╛╨│╤А╨╡╤Б╤Б": 0}
                                                                               ^
.\legacy\old_code\old_projects_tab.py:327:80: E501 line too long (81 > 79 characters)
                st.sidebar.success(f"╨Я╤Г╤Б╤В╨╛╨╣ ╨┐╤А╨╛╨╡╨║╤В '{new_project_name}' ╤Б╨╛╨╖╨┤╨░╨╜!")
                                                                               ^
.\legacy\old_code\old_projects_tab.py:370:80: E501 line too long (83 > 79 characters)
            st.info("""
            ## ЁЯЪА ╨Ф╨╛╨▒╤А╨╛ ╨┐╨╛╨╢╨░╨╗╨╛╨▓╨░╤В╤М ╨▓ ╨╝╨╡╨╜╨╡╨┤╨╢╨╡╤А ╨┐╤А╨╛╨╡╨║╤В╨╛╨▓!

            ╨Ч╨┤╨╡╤Б╤М ╨▓╤Л ╨╝╨╛╨╢╨╡╤В╨╡:
            - ЁЯУК **╨Ю╤В╤Б╨╗╨╡╨╢╨╕╨▓╨░╤В╤М ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б** ╨▓╨░╤И╨╕╤Е ╨┐╤А╨╛╨╡╨║╤В╨╛╨▓ ╤Б ╨│╤А╨░╤Д╨╕╤З╨╡╤Б╨║╨╕╨╝╨╕ ╨╕╨╜╨┤╨╕╨║╨░╤В╨╛╤А╨░╨╝╨╕
            - ЁЯОп **╨б╨╛╨╖╨┤╨░╨▓╨░╤В╤М ╨┐╤А╨╛╨╡╨║╤В╤Л** ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨╛╨▓ ╨╕╨╗╨╕ ╤Б ╨╜╤Г╨╗╤П
            - ЁЯУИ **╨Т╨╕╨╖╤Г╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╤В╤М** ╤Б╤В╨░╤В╤Г╤Б ╨▓╤Л╨┐╨╛╨╗╨╜╨╡╨╜╨╕╤П ╨╖╨░╨┤╨░╤З
            - тЬПя╕П **╨а╨╡╨┤╨░╨║╤В╨╕╤А╨╛╨▓╨░╤В╤М** ╨╖╨░╨┤╨░╤З╨╕ ╤Б ╨┐╨╛╨╗╨╖╤Г╨╜╨║╨░╨╝╨╕ ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б╨░
            - тЭМ **╨г╨┤╨░╨╗╤П╤В╤М** ╨╜╨╡╨╜╤Г╨╢╨╜╤Л╨╡ ╨╖╨░╨┤╨░╤З╨╕

            **╨з╤В╨╛╨▒╤Л ╨╜╨░╤З╨░╤В╤М, ╤Б╨╛╨╖╨┤╨░╨╣╤В╨╡ ╨▓╨░╤И ╨┐╨╡╤А╨▓╤Л╨╣ ╨┐╤А╨╛╨╡╨║╤В ╨▓ ╨▒╨╛╨║╨╛╨▓╨╛╨╣ ╨┐╨░╨╜╨╡╨╗╨╕!**
            """)
                       
                                                      
^
.\legacy\old_code\old_projects_tab.py:379:72: W292 no newline at end of file
            st.info("ЁЯСИ ╨Т╤Л╨▒╨╡╤А╨╕╤В╨╡ ╨┐╤А╨╛╨╡╨║╤В ╨┤╨╗╤П ╨┐╤А╨╛╤Б╨╝╨╛╤В╤А╨░ ╨▓ ╨▒╨╛╨║╨╛╨▓╨╛╨╣ ╨┐╨░╨╜╨╡╨╗╨╕")                                                                       ^
.\models\base.py:2:1: F401 'pydantic.validator' imported but unused
from pydantic import BaseModel, validator
^
.\models\base.py:37:27: W292 no newline at end of file
        return cls(**data)                          ^
.\models\diary.py:1:1: F401 'typing.Optional' imported but unused
from typing import List, Dict, Optional
^
.\models\diary.py:4:1: F401 'core.validators.Validators' imported but unused
from core.validators import Validators
^
.\models\diary.py:70:10: W292 no newline at end of file
        }         ^
.\models\notes.py:1:1: F401 'typing.Dict' imported but unused
from typing import List, Dict, Optional
^
.\models\notes.py:1:1: F401 'typing.Optional' imported but unused
from typing import List, Dict, Optional
^
.\models\notes.py:32:50: W292 no newline at end of file
        return [note.text for note in self.notes]                                                 ^
.\models\projects.py:1:1: F401 'typing.Dict' imported but unused
from typing import List, Dict, Optional
^
.\models\projects.py:1:1: F401 'typing.Optional' imported but unused
from typing import List, Dict, Optional
^
.\models\projects.py:21:80: E501 line too long (88 > 79 characters)
    ╨╖╨░╨┤╨░╤З╨╕: List[ProjectTask] = Field(default_factory=list, description="╨Ч╨░╨┤╨░╤З╨╕ ╤Б╨╡╨║╤Ж╨╕╨╕")
                                                                               ^
.\models\projects.py:51:80: E501 line too long (82 > 79 characters)
    sections: List[ProjectSection] = Field(default_factory=list, alias="sections")
                                                                               ^
.\models\projects.py:52:80: E501 line too long (84 > 79 characters)
    overall: ProjectOverall = Field(default_factory=ProjectOverall, alias="overall")
                                                                               ^
.\models\projects.py:67:71: W292 no newline at end of file
        return total_progress // total_tasks if total_tasks > 0 else 0                                                                      ^
.\models\state.py:1:1: F401 'typing.Dict' imported but unused
from typing import List, Dict, Optional
^
.\models\state.py:9:80: E501 line too long (93 > 79 characters)
    type: str = Field("percent", description="Input type: percent, scale_1_10, text, yes_no")
                                                                               ^
.\models\state.py:47:11: W292 no newline at end of file
        ))          ^
.\services\diary_service.py:1:1: F401 'pathlib.Path' imported but unused
from pathlib import Path
^
.\services\diary_service.py:3:1: F401 'datetime.date' imported but unused
from datetime import date, timedelta
^
.\services\diary_service.py:3:1: F401 'datetime.timedelta' imported but unused
from datetime import date, timedelta
^
.\services\diary_service.py:4:80: E501 line too long (85 > 79 characters)
from core.exceptions import DayNotFoundError, DataValidationError, FileOperationError
                                                                               ^
.\services\diary_service.py:9:1: F811 redefinition of unused 'DayNotFoundError' from line 4
from core.exceptions import DayNotFoundError, DataValidationError, FileOperationError
^
.\services\diary_service.py:9:1: F811 redefinition of unused 'DataValidationError' from line 4
from core.exceptions import DayNotFoundError, DataValidationError, FileOperationError
^
.\services\diary_service.py:9:1: F811 redefinition of unused 'FileOperationError' from line 4
from core.exceptions import DayNotFoundError, DataValidationError, FileOperationError
^
.\services\diary_service.py:9:80: E501 line too long (85 > 79 characters)
from core.exceptions import DayNotFoundError, DataValidationError, FileOperationError
                                                                               ^
.\services\diary_service.py:10:1: F811 redefinition of unused 'Day' from line 7
from models.diary import Day, Task
^
.\services\diary_service.py:10:1: F811 redefinition of unused 'Task' from line 7
from models.diary import Day, Task
^
.\services\diary_service.py:10:1: F401 'models.diary.Task' imported but unused
from models.diary import Day, Task
^
.\services\diary_service.py:12:1: E302 expected 2 blank lines, found 1
class DiaryService:
^
.\services\diary_service.py:44:80: E501 line too long (84 > 79 characters)
    def create_day(self, day_date: str, template_name: Optional[str] = None) -> Day:
                                                                               ^
.\services\diary_service.py:113:80: E501 line too long (87 > 79 characters)
                if period in migrated_data and isinstance(migrated_data[period], list):
                                                                               ^
.\services\diary_service.py:115:80: E501 line too long (88 > 79 characters)
                        if isinstance(task_data, dict) and "╨║╨░╤В╨╡╨│╨╛╤А╨╕╤П" not in task_data:
                                                                               ^
.\services\diary_service.py:116:80: E501 line too long (104 > 79 characters)
                            task_data["╨║╨░╤В╨╡╨│╨╛╤А╨╕╤П"] = self._suggest_category(task_data.get("╨╖╨░╨┤╨░╤З╨░", ""))
                                                                               ^
.\services\diary_service.py:121:80: E501 line too long (84 > 79 characters)
            raise DataValidationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╨╝╨╕╨│╤А╨░╤Ж╨╕╨╕ ╨┤╨░╨╜╨╜╤Л╤Е ╨┤╨╜╤П {day_date}: {e}")
                                                                               ^
.\services\diary_service.py:138:5: F811 redefinition of unused '_migrate_old_format' from line 99
    def _migrate_old_format(self, data: Dict, day_date: str) -> Day:
    ^
.\services\diary_service.py:168:80: E501 line too long (85 > 79 characters)
                        new_state.set_value(new_category, old_state[old_key], "text")
                                                                               ^
.\services\diary_service.py:174:80: E501 line too long (87 > 79 characters)
                if period in migrated_data and isinstance(migrated_data[period], list):
                                                                               ^
.\services\diary_service.py:185:80: E501 line too long (81 > 79 characters)
                                task_data["progress"] = task_data.pop("╨┐╤А╨╛╨│╤А╨╡╤Б╤Б")
                                                                               ^
.\services\diary_service.py:187:80: E501 line too long (105 > 79 characters)
                                task_data["category"] = self._suggest_category(task_data.get("task", ""))
                                                                               ^
.\services\diary_service.py:192:80: E501 line too long (82 > 79 characters)
            raise DataValidationError(f"Error migrating day data {day_date}: {e}")
                                                                               ^
.\services\diary_service.py:194:1: E305 expected 2 blank lines after class or function definition, found 0
diary_service = DiaryService()^
.\services\diary_service.py:194:31: W292 no newline at end of file
diary_service = DiaryService()                              ^
.\services\file_service.py:4:1: F401 'typing.Optional' imported but unused
from typing import Any, Dict, Optional, List  # тмЕя╕П ╨Ф╨Ю╨С╨Р╨Т╨м╨в╨Х List ╨╖╨┤╨╡╤Б╤М
^
.\services\file_service.py:5:1: F401 'core.exceptions.DataValidationError' imported but unused
from core.exceptions import FileOperationError, DataValidationError
^
.\services\file_service.py:6:1: F401 'core.validators.Validators' imported but unused
from core.validators import Validators
^
.\services\file_service.py:27:80: E501 line too long (86 > 79 characters)
            raise FileOperationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╨┐╨░╤А╤Б╨╕╨╜╨│╨░ JSON ╨▓ ╤Д╨░╨╣╨╗╨╡ {file_path}: {e}")
                                                                               ^
.\services\file_service.py:42:80: E501 line too long (81 > 79 characters)
            raise FileOperationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╤Б╨╛╤Е╤А╨░╨╜╨╡╨╜╨╕╤П ╤Д╨░╨╣╨╗╨░ {file_path}: {e}")
                                                                               ^
.\services\file_service.py:63:80: E501 line too long (81 > 79 characters)
    def list_files(self, directory: Path, pattern: str = "*.json") -> List[Path]:
                                                                               ^
.\services\file_service.py:70:80: E501 line too long (82 > 79 characters)
            raise FileOperationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╤З╤В╨╡╨╜╨╕╤П ╨┤╨╕╤А╨╡╨║╤В╨╛╤А╨╕╨╕ {directory}: {e}")
                                                                               ^
.\services\file_service.py:74:29: W292 no newline at end of file
file_service = FileService()                            ^
.\services\project_service.py:1:1: F401 'pathlib.Path' imported but unused
from pathlib import Path
^
.\services\project_service.py:3:80: E501 line too long (89 > 79 characters)
from core.exceptions import ProjectNotFoundError, DataValidationError, FileOperationError
                                                                               ^
.\services\project_service.py:6:80: E501 line too long (97 > 79 characters)
from models.projects import Project, ProjectMetadata, ProjectSection, ProjectTask, ProjectOverall
                                                                               ^
.\services\project_service.py:29:80: E501 line too long (84 > 79 characters)
            raise FileOperationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╨╖╨░╨│╤А╤Г╨╖╨║╨╕ ╨┐╤А╨╛╨╡╨║╤В╨░ {project_name}: {e}")
                                                                               ^
.\services\project_service.py:36:80: E501 line too long (82 > 79 characters)
            file_service.save_json(project_file, project_data.dict(by_alias=True))
                                                                               ^
.\services\project_service.py:40:80: E501 line too long (86 > 79 characters)
            raise FileOperationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╤Б╨╛╤Е╤А╨░╨╜╨╡╨╜╨╕╤П ╨┐╤А╨╛╨╡╨║╤В╨░ {project_name}: {e}")
                                                                               ^
.\services\project_service.py:42:80: E501 line too long (96 > 79 characters)
    def create_project(self, project_name: str, template_name: Optional[str] = None) -> Project:
                                                                               ^
.\services\project_service.py:55:80: E501 line too long (84 > 79 characters)
            raise FileOperationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╤Б╨╛╨╖╨┤╨░╨╜╨╕╤П ╨┐╤А╨╛╨╡╨║╤В╨░ {project_name}: {e}")
                                                                               ^
.\services\project_service.py:74:80: E501 line too long (84 > 79 characters)
            raise FileOperationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╤Г╨┤╨░╨╗╨╡╨╜╨╕╤П ╨┐╤А╨╛╨╡╨║╤В╨░ {project_name}: {e}")
                                                                               ^
.\services\project_service.py:76:80: E501 line too long (86 > 79 characters)
    def _create_from_template(self, project_name: str, template_name: str) -> Project:
                                                                               ^
.\services\project_service.py:81:80: E501 line too long (81 > 79 characters)
            raise FileOperationError(f"╨и╨░╨▒╨╗╨╛╨╜ ╨┐╤А╨╛╨╡╨║╤В╨░ {template_name} ╨╜╨╡ ╨╜╨░╨╣╨┤╨╡╨╜")
                                                                               ^
.\services\project_service.py:103:80: E501 line too long (83 > 79 characters)
                        ProjectTask(╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡="╨Ю╨┐╤А╨╡╨┤╨╡╨╗╨╡╨╜╨╕╨╡ ╤В╤А╨╡╨▒╨╛╨▓╨░╨╜╨╕╨╣", ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б=0),
                                                                               ^
.\services\project_service.py:104:80: E501 line too long (86 > 79 characters)
                        ProjectTask(╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡="╨Я╤А╨╛╨╡╨║╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨░╤А╤Е╨╕╤В╨╡╨║╤В╤Г╤А╤Л", ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б=0)
                                                                               ^
.\services\project_service.py:138:80: E501 line too long (82 > 79 characters)
                if key not in ["metadata", "overall"] and isinstance(value, dict):
                                                                               ^
.\services\project_service.py:142:80: E501 line too long (92 > 79 characters)
                            tasks.append(ProjectTask(╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡=task_name, ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б=progress))
                                                                               ^
.\services\project_service.py:152:80: E501 line too long (92 > 79 characters)
            raise DataValidationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╨╝╨╕╨│╤А╨░╤Ж╨╕╨╕ ╨┤╨░╨╜╨╜╤Л╤Е ╨┐╤А╨╛╨╡╨║╤В╨░ {project_name}: {e}")
                                                                               ^
.\services\project_service.py:156:35: W292 no newline at end of file
project_service = ProjectService()                                  ^
.\services\state_service.py:2:1: F401 'typing.Dict' imported but unused
from typing import List, Dict, Optional
^
.\services\state_service.py:2:1: F401 'typing.Optional' imported but unused
from typing import List, Dict, Optional
^
.\services\state_service.py:6:1: F401 'services.file_service.file_service' imported but unused
from services.file_service import file_service
^
.\services\state_service.py:14:80: E501 line too long (80 > 79 characters)
        self.default_categories_file = self.config_dir / "state_categories.yaml"
                                                                               ^
.\services\state_service.py:15:80: E501 line too long (82 > 79 characters)
        self.user_categories_file = self.config_dir / "user_state_categories.yaml"
                                                                               ^
.\services\state_service.py:24:80: E501 line too long (85 > 79 characters)
            raise FileOperationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╤Б╨╛╨╖╨┤╨░╨╜╨╕╤П ╨┤╨╕╤А╨╡╨║╤В╨╛╤А╨╕╨╕ ╨║╨╛╨╜╤Д╨╕╨│╤Г╤А╨░╤Ж╨╕╨╕: {e}")
                                                                               ^
.\services\state_service.py:73:80: E501 line too long (84 > 79 characters)
                with open(self.default_categories_file, 'w', encoding='utf-8') as f:
                                                                               ^
.\services\state_service.py:74:80: E501 line too long (98 > 79 characters)
                    yaml.dump({"categories": default_categories}, f, allow_unicode=True, indent=2)
                                                                               ^
.\services\state_service.py:76:80: E501 line too long (88 > 79 characters)
                raise FileOperationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╤Б╨╛╨╖╨┤╨░╨╜╨╕╤П ╨║╨░╤В╨╡╨│╨╛╤А╨╕╨╣ ╨┐╨╛ ╤Г╨╝╨╛╨╗╤З╨░╨╜╨╕╤О: {e}")
                                                                               ^
.\services\state_service.py:85:80: E501 line too long (81 > 79 characters)
                with open(self.user_categories_file, 'r', encoding='utf-8') as f:
                                                                               ^
.\services\state_service.py:88:80: E501 line too long (88 > 79 characters)
                    categories.extend([StateCategory(**cat) for cat in user_categories])
                                                                               ^
.\services\state_service.py:94:80: E501 line too long (80 > 79 characters)
            with open(self.default_categories_file, 'r', encoding='utf-8') as f:
                                                                               ^
.\services\state_service.py:98:80: E501 line too long (85 > 79 characters)
                # ╨Ф╨╛╨▒╨░╨▓╨╗╤П╨╡╨╝ ╤В╨╛╨╗╤М╨║╨╛ ╤В╨╡ ╨┤╨╡╤Д╨╛╨╗╤В╨╜╤Л╨╡ ╨║╨░╤В╨╡╨│╨╛╤А╨╕╨╕, ╨║╨╛╤В╨╛╤А╤Л╤Е ╨╜╨╡╤В ╤Г ╨┐╨╛╨╗╤М╨╖╨╛╨▓╨░╤В╨╡╨╗╤П
                                                                               ^
.\services\state_service.py:113:80: E501 line too long (113 > 79 characters)
            data = {"categories": [cat.model_dump() for cat in categories]}  # ╨Ш╨б╨Я╨а╨Р╨Т╨Ы╨Х╨Э╨Ю: model_dump ╨▓╨╝╨╡╤Б╤В╨╛ dict
                                                                               ^
.\services\state_service.py:117:80: E501 line too long (90 > 79 characters)
            raise FileOperationError(f"╨Ю╤И╨╕╨▒╨║╨░ ╤Б╨╛╤Е╤А╨░╨╜╨╡╨╜╨╕╤П ╨┐╨╛╨╗╤М╨╖╨╛╨▓╨░╤В╨╡╨╗╤М╤Б╨║╨╕╤Е ╨║╨░╤В╨╡╨│╨╛╤А╨╕╨╣: {e}")
                                                                               ^
.\services\state_service.py:126:31: W292 no newline at end of file
state_service = StateService()                              ^
.\ui\components\progress_components.py:41:80: E501 line too long (95 > 79 characters)
        summary_md = "| ╨Ъ╨░╤В╨╡╨│╨╛╤А╨╕╤П | ╨Я╤А╨╛╨│╤А╨╡╤Б╤Б | ╨б╤В╨░╤В╤Г╤Б |\n|-----------|:---------:|:-------:|\n"
                                                                               ^
.\ui\components\progress_components.py:43:80: E501 line too long (97 > 79 characters)
        for cat_name, avg in sorted(category_progress.items(), key=lambda x: x[1], reverse=True):
                                                                               ^
.\ui\components\progress_components.py:53:80: E501 line too long (97 > 79 characters)
            summary_md += f"| {cat_name} | {ProgressComponents.progress_bar(avg)} | {status} |\n"
                                                                               ^
.\ui\components\progress_components.py:59:80: E501 line too long (87 > 79 characters)
    def render_section_progress(section_name: str, tasks: List, progress: int) -> None:
                                                                               ^
.\ui\components\progress_components.py:62:80: E501 line too long (85 > 79 characters)
        st.markdown(f"`{ProgressComponents.progress_bar(progress)}` **{progress}%**")
                                                                               ^
.\ui\components\progress_components.py:73:80: E501 line too long (85 > 79 characters)
                st.write(f"`{ProgressComponents.progress_bar_short(task_progress)}`")                                                                               ^
.\ui\components\progress_components.py:73:86: W292 no newline at end of file
                st.write(f"`{ProgressComponents.progress_bar_short(task_progress)}`")                                                                                     ^
.\ui\components\task_components.py:2:1: F401 'typing.List' imported but unused
from typing import List, Callable, Optional
^
.\ui\components\task_components.py:18:80: E501 line too long (83 > 79 characters)
        cols = st.columns([3, 2, 2, 2, 2, 1] if show_category else [3, 2, 2, 2, 1])
                                                                               ^
.\ui\components\task_components.py:45:80: E501 line too long (108 > 79 characters)
                category_index = CATEGORIES.index(current_category) if current_category in CATEGORIES else 0
                                                                               ^
.\ui\components\task_components.py:56:80: E501 line too long (98 > 79 characters)
            status_index = TASK_STATUSES.index(task.╤Б╤В╨░╤В╤Г╤Б) if task.╤Б╤В╨░╤В╤Г╤Б in TASK_STATUSES else 0
                                                                               ^
.\ui\components\task_components.py:86:80: E501 line too long (93 > 79 characters)
        progress_emoji = "ЁЯЯв" if task.╨┐╤А╨╛╨│╤А╨╡╤Б╤Б == 100 else "ЁЯЯб" if task.╨┐╤А╨╛╨│╤А╨╡╤Б╤Б >= 50 else "ЁЯФ┤"
                                                                               ^
.\ui\components\task_components.py:89:80: E501 line too long (96 > 79 characters)
        st.caption(f"тП░ {task.╨▓╤А╨╡╨╝╤П} | ЁЯП╖я╕П {task.╨║╨░╤В╨╡╨│╨╛╤А╨╕╤П} | ЁЯУК {task.╨┐╤А╨╛╨│╤А╨╡╤Б╤Б}% | {task.╤Б╤В╨░╤В╤Г╤Б}")
                                                                               ^
.\ui\components\task_components.py:113:80: E501 line too long (81 > 79 characters)
                if st.form_submit_button("тЮХ ╨Ф╨╛╨▒╨░╨▓╨╕╤В╤М", use_container_width=True):
                                                                               ^
.\ui\components\task_components.py:122:41: W292 no newline at end of file
                        on_add(new_task)                                        ^
.\ui\diary_tab.py:3:1: F401 'typing.List' imported but unused
from typing import List, Optional
^
.\ui\diary_tab.py:3:1: F401 'typing.Optional' imported but unused
from typing import List, Optional
^
.\ui\diary_tab.py:35:80: E501 line too long (86 > 79 characters)
                selected_day = (date.today() + timedelta(days=1)).strftime("%Y-%m-%d")
                                                                               ^
.\ui\diary_tab.py:92:80: E501 line too long (100 > 79 characters)
            if st.sidebar.button("ЁЯУЕ ╨б╨╛╨╖╨┤╨░╤В╤М ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨░", use_container_width=True) and new_day_name:
                                                                               ^
.\ui\diary_tab.py:95:80: E501 line too long (83 > 79 characters)
                    st.sidebar.success(f"╨Ф╨╡╨╜╤М '{new_day_name}' ╤Б╨╛╨╖╨┤╨░╨╜ ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨░!")
                                                                               ^
.\ui\diary_tab.py:100:80: E501 line too long (101 > 79 characters)
            if st.sidebar.button("ЁЯУД ╨б╨╛╨╖╨┤╨░╤В╤М ╨┐╤Г╤Б╤В╨╛╨╣ ╨┤╨╡╨╜╤М", use_container_width=True) and new_day_name:
                                                                               ^
.\ui\diary_tab.py:129:80: E501 line too long (105 > 79 characters)
        if st.sidebar.button("╨Ф╨╛╨▒╨░╨▓╨╕╤В╤М ╨╖╨░╨┤╨░╤З╤Г", use_container_width=True) and task_name and selected_day:
                                                                               ^
.\ui\diary_tab.py:156:80: E501 line too long (83 > 79 characters)
                self._render_period_tasks(period, day_data, selected_day, day_file)
                                                                               ^
.\ui\diary_tab.py:170:80: E501 line too long (105 > 79 characters)
    def _render_period_tasks(self, period: str, day_data: Day, selected_day: str, day_file: str) -> None:
                                                                               ^
.\ui\diary_tab.py:175:80: E501 line too long (81 > 79 characters)
        with st.expander(f"{icon} {period} ({len(tasks)} ╨╖╨░╨┤╨░╤З)", expanded=True):
                                                                               ^
.\ui\diary_tab.py:193:80: E501 line too long (98 > 79 characters)
            if st.button(f"тЮХ ╨Ф╨╛╨▒╨░╨▓╨╕╤В╤М ╨▓ {period}", key=f"add_{period}", use_container_width=True):
                                                                               ^
.\ui\diary_tab.py:210:80: E501 line too long (95 > 79 characters)
    def _render_state_and_notes(self, day_data: Day, selected_day: str, day_file: str) -> None:
                                                                               ^
.\ui\diary_tab.py:258:80: E501 line too long (86 > 79 characters)
            if st.button("ЁЯТ╛ ╨б╨╛╤Е╤А╨░╨╜╨╕╤В╤М ╤Б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡ ╨╕ ╨╖╨░╨╝╨╡╤В╨║╨╕", use_container_width=True):
                                                                               ^
.\ui\diary_tab.py:270:80: E501 line too long (108 > 79 characters)
                        day_data.╨╖╨░╨╝╨╡╤В╨║╨╕ = [note.strip() for note in notes_text.split('\n') if note.strip()]
                                                                               ^
.\ui\diary_tab.py:280:80: E501 line too long (94 > 79 characters)
    def _render_day_management(self, selected_day: str, day_data: Day, day_file: str) -> None:
                                                                               ^
.\ui\diary_tab.py:288:80: E501 line too long (96 > 79 characters)
            if st.button("ЁЯТ╛ ╨б╨╛╤Е╤А╨░╨╜╨╕╤В╤М ╨▓╤Б╨╡ ╨╕╨╖╨╝╨╡╨╜╨╡╨╜╨╕╤П", use_container_width=True, type="primary"):
                                                                               ^
.\ui\diary_tab.py:302:80: E501 line too long (86 > 79 characters)
                    tomorrow = (date.today() + timedelta(days=1)).strftime("%Y-%m-%d")
                                                                               ^
.\ui\diary_tab.py:315:55: W291 trailing whitespace
        st.info("""
        ## ЁЯУЕ ╨Ф╨╛╨▒╤А╨╛ ╨┐╨╛╨╢╨░╨╗╨╛╨▓╨░╤В╤М ╨▓ ╨╡╨╢╨╡╨┤╨╜╨╡╨▓╨╜╨╕╨║!

        ╨Ч╨┤╨╡╤Б╤М ╨▓╤Л ╨╝╨╛╨╢╨╡╤В╨╡:
        - ЁЯУЭ ╨б╨╛╨╖╨┤╨░╨▓╨░╤В╤М ╤А╨░╤Б╨┐╨╕╤Б╨░╨╜╨╕╤П ╨╜╨░ ╨┤╨╡╨╜╤М
        - ЁЯОп ╨Ш╤Б╨┐╨╛╨╗╤М╨╖╨╛╨▓╨░╤В╤М ╤И╨░╨▒╨╗╨╛╨╜╤Л ╨┤╨╗╤П ╤А╨░╨╖╨╜╤Л╤Е ╤В╨╕╨┐╨╛╨▓ ╨┤╨╜╨╡╨╣  
        - тЬЕ ╨Ю╤В╤Б╨╗╨╡╨╢╨╕╨▓╨░╤В╤М ╨▓╤Л╨┐╨╛╨╗╨╜╨╡╨╜╨╕╨╡ ╨╖╨░╨┤╨░╤З ╤Б ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б-╨▒╨░╤А╨░╨╝╨╕
        - тП░ ╨Я╨╗╨░╨╜╨╕╤А╨╛╨▓╨░╤В╤М ╨▓╤А╨╡╨╝╤П ╨┐╨╛ ╨┐╨╡╤А╨╕╨╛╨┤╨░╨╝ ╨┤╨╜╤П
        - ЁЯУК ╨Т╨╕╨┤╨╡╤В╤М ╤Б╤В╨░╤В╨╕╤Б╤В╨╕╨║╤Г ╨┐╨╛ ╨║╨░╤В╨╡╨│╨╛╤А╨╕╤П╨╝ ╨╖╨░╨┤╨░╤З
        - ЁЯТл ╨Ю╤В╤Б╨╗╨╡╨╢╨╕╨▓╨░╤В╤М ╤Б╨╛╤Б╤В╨╛╤П╨╜╨╕╨╡ ╨╕ ╤Б╨░╨╝╨╛╤З╤Г╨▓╤Б╤В╨▓╨╕╨╡
        - ЁЯУЭ ╨Ч╨░╨┐╨╕╤Б╤Л╨▓╨░╤В╤М ╨╖╨░╨╝╨╡╤В╨║╨╕ ╨╕ ╨╕╨╜╤Б╨░╨╣╤В╤Л

        ╨з╤В╨╛╨▒╤Л ╨╜╨░╤З╨░╤В╤М, ╤Б╨╛╨╖╨┤╨░╨╣╤В╨╡ ╨▓╨░╤И ╨┐╨╡╤А╨▓╤Л╨╣ ╨┤╨╡╨╜╤М ╨▓ ╨▒╨╛╨║╨╛╨▓╨╛╨╣ ╨┐╨░╨╜╨╡╨╗╨╕!
        """)
                   
                                  ^
.\ui\diary_tab.py:343:23: W292 no newline at end of file
diary_tab = DiaryTab()                      ^
.\ui\projects_tab.py:2:1: F401 'typing.List' imported but unused
from typing import List, Optional
^
.\ui\projects_tab.py:5:1: F401 'models.projects.ProjectSection' imported but unused
from models.projects import Project, ProjectTask, ProjectSection
^
.\ui\projects_tab.py:35:80: E501 line too long (83 > 79 characters)
            if st.sidebar.button("ЁЯЪА ╨б╨╛╨╖╨┤╨░╤В╤М ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨░", use_container_width=True):
                                                                               ^
.\ui\projects_tab.py:38:80: E501 line too long (91 > 79 characters)
                        project_service.create_project(new_project_name, selected_template)
                                                                               ^
.\ui\projects_tab.py:39:80: E501 line too long (118 > 79 characters)
                        project_service.save_project(new_project_name, project_service.load_project(new_project_name))
                                                                               ^
.\ui\projects_tab.py:40:80: E501 line too long (93 > 79 characters)
                        st.sidebar.success(f"╨Я╤А╨╛╨╡╨║╤В '{new_project_name}' ╤Б╨╛╨╖╨┤╨░╨╜ ╨╕╨╖ ╤И╨░╨▒╨╗╨╛╨╜╨░!")
                                                                               ^
.\ui\projects_tab.py:45:80: E501 line too long (82 > 79 characters)
                    st.sidebar.error("╨Т╨▓╨╡╨┤╨╕╤В╨╡ ╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡ ╨┐╤А╨╛╨╡╨║╤В╨░ ╨╕ ╨▓╤Л╨▒╨╡╤А╨╕╤В╨╡ ╤И╨░╨▒╨╗╨╛╨╜")
                                                                               ^
.\ui\projects_tab.py:47:80: E501 line too long (86 > 79 characters)
            if st.sidebar.button("ЁЯУД ╨б╨╛╨╖╨┤╨░╤В╤М ╨┐╤Г╤Б╤В╨╛╨╣ ╨┐╤А╨╛╨╡╨║╤В", use_container_width=True):
                                                                               ^
.\ui\projects_tab.py:51:80: E501 line too long (118 > 79 characters)
                        project_service.save_project(new_project_name, project_service.load_project(new_project_name))
                                                                               ^
.\ui\projects_tab.py:52:80: E501 line too long (89 > 79 characters)
                        st.sidebar.success(f"╨Я╤Г╤Б╤В╨╛╨╣ ╨┐╤А╨╛╨╡╨║╤В '{new_project_name}' ╤Б╨╛╨╖╨┤╨░╨╜!")
                                                                               ^
.\ui\projects_tab.py:105:80: E501 line too long (137 > 79 characters)
            f"**ЁЯУИ GLOBAL PROGRESS:**    `{ProgressComponents.progress_bar(overall.╨│╨╗╨╛╨▒╨░╨╗╤М╨╜╤Л╨╣_╨┐╤А╨╛╨│╤А╨╡╤Б╤Б)}` {overall.╨│╨╗╨╛╨▒╨░╨╗╤М╨╜╤Л╨╣_╨┐╤А╨╛╨│╤А╨╡╤Б╤Б}%")
                                                                               ^
.\ui\projects_tab.py:107:80: E501 line too long (137 > 79 characters)
            f"**ЁЯза STABILITY INDEX:**    `{ProgressComponents.progress_bar(overall.╨╕╨╜╨┤╨╡╨║╤Б_╤Б╤В╨░╨▒╨╕╨╗╤М╨╜╨╛╤Б╤В╨╕)}` {overall.╨╕╨╜╨┤╨╡╨║╤Б_╤Б╤В╨░╨▒╨╕╨╗╤М╨╜╨╛╤Б╤В╨╕}%")
                                                                               ^
.\ui\projects_tab.py:108:80: E501 line too long (99 > 79 characters)
        st.markdown(f"**тЪЩя╕П PERFORMANCE BOOST:**  {'ЁЯЯй' * 5} +{overall.╨┐╤А╨╕╤А╨╛╤Б╤В_╨┐╤А╨╛╨╕╨╖╨▓╨╛╨┤╨╕╤В╨╡╨╗╤М╨╜╨╛╤Б╤В╨╕}%")
                                                                               ^
.\ui\projects_tab.py:114:80: E501 line too long (90 > 79 characters)
    def _render_project_dashboard(self, project_data: Project, project_name: str) -> None:
                                                                               ^
.\ui\projects_tab.py:132:80: E501 line too long (87 > 79 characters)
    def _render_project_editor(self, project_data: Project, project_name: str) -> None:
                                                                               ^
.\ui\projects_tab.py:141:80: E501 line too long (103 > 79 characters)
            new_name = st.text_input("╨Э╨░╨╖╨▓╨░╨╜╨╕╨╡", value=project_data.metadata.╨╜╨░╨╖╨▓╨░╨╜╨╕╨╡, key="meta_name")
                                                                               ^
.\ui\projects_tab.py:143:80: E501 line too long (105 > 79 characters)
            new_version = st.text_input("╨Т╨╡╤А╤Б╨╕╤П", value=project_data.metadata.╨▓╨╡╤А╤Б╨╕╤П, key="meta_version")
                                                                               ^
.\ui\projects_tab.py:145:80: E501 line too long (117 > 79 characters)
            new_description = st.text_input("╨Ю╨┐╨╕╤Б╨░╨╜╨╕╨╡", value=project_data.metadata.╨╛╨┐╨╕╤Б╨░╨╜╨╕╨╡, key="meta_description")
                                                                               ^
.\ui\projects_tab.py:159:80: E501 line too long (124 > 79 characters)
                f"**╨Ю╨▒╤Й╨╕╨╣ ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б ╤Б╨╡╨║╤Ж╨╕╨╕:** `{ProgressComponents.progress_bar(section_progress)}` **{section_progress}%**")
                                                                               ^
.\ui\projects_tab.py:188:80: E501 line too long (80 > 79 characters)
                        project_service.save_project(project_name, project_data)
                                                                               ^
.\ui\projects_tab.py:194:80: E501 line too long (97 > 79 characters)
                new_task_name = st.text_input("╨Э╨╛╨▓╨░╤П ╨╖╨░╨┤╨░╤З╨░", key=f"new_task_{section_idx}_name")
                                                                               ^
.\ui\projects_tab.py:233:80: E501 line too long (88 > 79 characters)
                value=project_data.overall.╨┐╤А╨╕╤А╨╛╤Б╤В_╨┐╤А╨╛╨╕╨╖╨▓╨╛╨┤╨╕╤В╨╡╨╗╤М╨╜╨╛╤Б╤В╨╕, key="performance"
                                                                               ^
.\ui\projects_tab.py:238:80: E501 line too long (83 > 79 characters)
                value=project_data.overall.╨╝╨╛╨▒╨╕╨╗╤М╨╜╨░╤П_╨│╨╛╤В╨╛╨▓╨╜╨╛╤Б╤В╤М, key="mobile_ready"
                                                                               ^
.\ui\projects_tab.py:244:80: E501 line too long (85 > 79 characters)
                index=["тЬЕ Stable", "тЪая╕П IndexedDB unstable", "тЭМ Not supported"].index(
                                                                               ^
.\ui\projects_tab.py:246:80: E501 line too long (119 > 79 characters)
                ) if project_data.overall.╨▓╨╡╨▒_╤А╨╡╨╢╨╕╨╝ in ["тЬЕ Stable", "тЪая╕П IndexedDB unstable", "тЭМ Not supported"] else 1,
                                                                               ^
.\ui\projects_tab.py:290:80: E501 line too long (88 > 79 characters)
            if sidebar_project and sidebar_project != st.session_state.selected_project:
                                                                               ^
.\ui\projects_tab.py:307:1: E305 expected 2 blank lines after class or function definition, found 1
projects_tab = ProjectsTab()^
.\ui\projects_tab.py:307:29: W292 no newline at end of file
projects_tab = ProjectsTab()                            ^
