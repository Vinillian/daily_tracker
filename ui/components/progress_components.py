import streamlit as st
from typing import Dict, List


class ProgressComponents:
    """–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""

    @staticmethod
    def progress_bar(percent: int, width: int = 20) -> str:
        """–¢–µ–∫—Å—Ç–æ–≤—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä"""
        filled = "‚ñà" * (percent * width // 100)
        empty = "‚ñë" * (width - len(filled))
        return f"{filled}{empty} {percent}%"

    @staticmethod
    def progress_bar_short(percent: int) -> str:
        """–ö–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä"""
        filled = "‚ñà" * (percent // 20)
        empty = "‚ñë" * (5 - percent // 20)
        return f"{filled}{empty} {percent}%"

    @staticmethod
    def get_progress_emoji(progress: int) -> str:
        """–≠–º–æ–¥–∑–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        if progress == 100:
            return "üü©"
        elif progress >= 80:
            return "üü®"
        elif progress >= 50:
            return "üüß"
        else:
            return "üü•"

    @staticmethod
    def render_category_progress(category_progress: Dict[str, int]) -> None:
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"""
        if not category_progress:
            st.info("ü§î –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
            return

        summary_md = "| –ö–∞—Ç–µ–≥–æ—Ä–∏—è | –ü—Ä–æ–≥—Ä–µ—Å—Å | –°—Ç–∞—Ç—É—Å |\n|-----------|:---------:|:-------:|\n"

        for cat_name, avg in sorted(category_progress.items(), key=lambda x: x[1], reverse=True):
            if avg >= 90:
                status = "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ"
            elif avg >= 70:
                status = "üü¢ –•–æ—Ä–æ—à–æ"
            elif avg >= 50:
                status = "üü° –í –ø—Ä–æ—Ü–µ—Å—Å–µ"
            else:
                status = "üî¥ –ù–∞—á–∞—Ç–æ"

            summary_md += f"| {cat_name} | {ProgressComponents.progress_bar(avg)} | {status} |\n"

        st.markdown(summary_md)
        st.caption("üí° –ù–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–¥–∞—á")

    @staticmethod
    def render_section_progress(section_name: str, tasks: List, progress: int) -> None:
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å–µ–∫—Ü–∏–∏"""
        st.markdown(f"### {section_name}")
        st.markdown(f"`{ProgressComponents.progress_bar(progress)}` **{progress}%**")

        for task in tasks:
            task_name = task.get('–Ω–∞–∑–≤–∞–Ω–∏–µ', '')
            task_progress = task.get('–ø—Ä–æ–≥—Ä–µ—Å—Å', 0)
            emoji = ProgressComponents.get_progress_emoji(task_progress)

            col1, col2 = st.columns([3, 2])
            with col1:
                st.write(f"{emoji} **{task_name}**")
            with col2:
                st.write(f"`{ProgressComponents.progress_bar_short(task_progress)}`")