import streamlit as st
from typing import List, Optional
from core.exceptions import DailyTrackerError
from services.project_service import project_service
from models.projects import Project, ProjectTask, ProjectSection
from ui.components.progress_components import ProgressComponents


class ProjectsTab:
    """–í–∫–ª–∞–¥–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤"""

    def __init__(self):
        self.template_files = project_service.template_dir.glob("*.json")
        self.template_names = sorted([f.stem for f in self.template_files])

    def render_sidebar(self) -> Optional[str]:
        """–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏"""
        st.sidebar.header("üìÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏")

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
        st.sidebar.subheader("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç")

        creation_type = st.sidebar.radio(
            "–¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞:",
            ["üìù –ü—É—Å—Ç–æ–π –ø—Ä–æ–µ–∫—Ç", "üéØ –ò–∑ —à–∞–±–ª–æ–Ω–∞"],
            key="project_creation_type"
        )

        new_project_name = st.sidebar.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞")

        if creation_type == "üéØ –ò–∑ —à–∞–±–ª–æ–Ω–∞":
            selected_template = st.sidebar.selectbox(
                "–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω",
                self.template_names,
                key="template_selection"
            )

            if st.sidebar.button("üöÄ –°–æ–∑–¥–∞—Ç—å –∏–∑ —à–∞–±–ª–æ–Ω–∞", use_container_width=True):
                if new_project_name and selected_template:
                    try:
                        project_service.create_project(new_project_name, selected_template)
                        project_service.save_project(new_project_name, project_service.load_project(new_project_name))
                        st.sidebar.success(f"–ü—Ä–æ–µ–∫—Ç '{new_project_name}' —Å–æ–∑–¥–∞–Ω –∏–∑ —à–∞–±–ª–æ–Ω–∞!")
                        st.rerun()
                    except DailyTrackerError as e:
                        st.sidebar.error(f"–û—à–∏–±–∫–∞: {e}")
                else:
                    st.sidebar.error("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω")
        else:
            if st.sidebar.button("üìÑ –°–æ–∑–¥–∞—Ç—å –ø—É—Å—Ç–æ–π –ø—Ä–æ–µ–∫—Ç", use_container_width=True):
                if new_project_name:
                    try:
                        project_service.create_project(new_project_name)
                        project_service.save_project(new_project_name, project_service.load_project(new_project_name))
                        st.sidebar.success(f"–ü—É—Å—Ç–æ–π –ø—Ä–æ–µ–∫—Ç '{new_project_name}' —Å–æ–∑–¥–∞–Ω!")
                        st.rerun()
                    except DailyTrackerError as e:
                        st.sidebar.error(f"–û—à–∏–±–∫–∞: {e}")
                else:
                    st.sidebar.error("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")

        # –í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞
        st.sidebar.subheader("üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤")
        all_projects = project_service.list_projects()

        if not all_projects:
            st.sidebar.info("üìù –ü—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç!")
            return None

        selected_project = st.sidebar.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç",
            all_projects,
            key="project_selection"
        )

        return selected_project

    def render_project_content(self, project_name: str) -> None:
        """–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
        try:
            project_data = project_service.load_project(project_name)

            # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤
            view_mode = st.radio(
                "–†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:",
                ["üìä –î—ç—à–±–æ—Ä–¥", "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"],
                horizontal=True,
                key=f"view_mode_{project_name}"
            )

            if view_mode == "üìä –î—ç—à–±–æ—Ä–¥":
                self._render_project_dashboard(project_data, project_name)
            else:
                self._render_project_editor(project_data, project_name)

        except DailyTrackerError as e:
            st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞: {e}")

    def _render_project_dashboard(self, project_data: Project, project_name: str) -> None:
        """–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥—ç—à–±–æ—Ä–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
        metadata = project_data.metadata
        st.header(f"üöÄ {metadata.–Ω–∞–∑–≤–∞–Ω–∏–µ} ‚Äî {metadata.–≤–µ—Ä—Å–∏—è}")
        st.caption(metadata.–æ–ø–∏—Å–∞–Ω–∏–µ)

        # –°–µ–∫—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
        for section in project_data.sections:
            section_progress = section.calculate_section_progress()
            ProgressComponents.render_section_progress(
                section.–Ω–∞–∑–≤–∞–Ω–∏–µ,
                [task.dict() for task in section.–∑–∞–¥–∞—á–∏],
                section_progress
            )

        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self._render_overall_stats(project_data.overall)

    def _render_overall_stats(self, overall) -> None:
        """–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        st.markdown("### üèÅ OVERALL PROJECT STATUS")

        st.markdown(
            f"**üìà GLOBAL PROGRESS:**    `{ProgressComponents.progress_bar(overall.–≥–ª–æ–±–∞–ª—å–Ω—ã–π_–ø—Ä–æ–≥—Ä–µ—Å—Å)}` {overall.–≥–ª–æ–±–∞–ª—å–Ω—ã–π_–ø—Ä–æ–≥—Ä–µ—Å—Å}%")
        st.markdown(
            f"**üß† STABILITY INDEX:**    `{ProgressComponents.progress_bar(overall.–∏–Ω–¥–µ–∫—Å_—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏)}` {overall.–∏–Ω–¥–µ–∫—Å_—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏}%")
        st.markdown(f"**‚öôÔ∏è PERFORMANCE BOOST:**  {'üü©' * 5} +{overall.–ø—Ä–∏—Ä–æ—Å—Ç_–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏}%")

        mobile_status = "‚úÖ YES" if overall.–º–æ–±–∏–ª—å–Ω–∞—è_–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å else "‚ùå NO"
        st.markdown(f"**üì± MOBILE READY:**       {mobile_status}")
        st.markdown(f"**üåê WEB MODE:**           {overall.–≤–µ–±_—Ä–µ–∂–∏–º}")

    def _render_project_editor(self, project_data: Project, project_name: str) -> None:
        """–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
        st.subheader(f"‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {project_name}")

        # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        st.markdown("### üìã –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞")
        col1, col2, col3 = st.columns(3)

        with col1:
            new_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ", value=project_data.metadata.–Ω–∞–∑–≤–∞–Ω–∏–µ, key="meta_name")
        with col2:
            new_version = st.text_input("–í–µ—Ä—Å–∏—è", value=project_data.metadata.–≤–µ—Ä—Å–∏—è, key="meta_version")
        with col3:
            new_description = st.text_input("–û–ø–∏—Å–∞–Ω–∏–µ", value=project_data.metadata.–æ–ø–∏—Å–∞–Ω–∏–µ, key="meta_description")

        project_data.metadata.–Ω–∞–∑–≤–∞–Ω–∏–µ = new_name
        project_data.metadata.–≤–µ—Ä—Å–∏—è = new_version
        project_data.metadata.–æ–ø–∏—Å–∞–Ω–∏–µ = new_description

        # –°–µ–∫—Ü–∏–∏ –∏ –∑–∞–¥–∞—á–∏
        st.markdown("### üéØ –ó–∞–¥–∞—á–∏ –ø—Ä–æ–µ–∫—Ç–∞")

        for section_idx, section in enumerate(project_data.sections):
            section_progress = section.calculate_section_progress()

            st.markdown(f"#### üìÅ {section.–Ω–∞–∑–≤–∞–Ω–∏–µ}")
            st.markdown(
                f"**–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–µ–∫—Ü–∏–∏:** `{ProgressComponents.progress_bar(section_progress)}` **{section_progress}%**")

            # –ó–∞–¥–∞—á–∏ —Å–µ–∫—Ü–∏–∏
            for task_idx, task in enumerate(section.–∑–∞–¥–∞—á–∏):
                col1, col2, col3 = st.columns([3, 2, 1])

                with col1:
                    new_task_name = st.text_input(
                        "–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏",
                        value=task.–Ω–∞–∑–≤–∞–Ω–∏–µ,
                        key=f"task_{section_idx}_{task_idx}_name"
                    )
                    task.–Ω–∞–∑–≤–∞–Ω–∏–µ = new_task_name

                with col2:
                    new_progress = st.slider(
                        "–ü—Ä–æ–≥—Ä–µ—Å—Å",
                        min_value=0,
                        max_value=100,
                        value=task.–ø—Ä–æ–≥—Ä–µ—Å—Å,
                        key=f"task_{section_idx}_{task_idx}_progress"
                    )
                    task.–ø—Ä–æ–≥—Ä–µ—Å—Å = new_progress

                with col3:
                    st.markdown("")
                    st.markdown("")
                    if st.button("‚ùå", key=f"delete_{section_idx}_{task_idx}"):
                        section.–∑–∞–¥–∞—á–∏.pop(task_idx)
                        project_service.save_project(project_name, project_data)
                        st.rerun()

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
            col1, col2, col3 = st.columns([3, 1, 1])
            with col1:
                new_task_name = st.text_input("–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞", key=f"new_task_{section_idx}_name")
            with col2:
                new_task_progress = st.number_input(
                    "–ü—Ä–æ–≥—Ä–µ—Å—Å %",
                    min_value=0,
                    max_value=100,
                    value=0,
                    key=f"new_task_{section_idx}_progress"
                )
            with col3:
                st.markdown("")
                st.markdown("")
                if st.button("‚ûï", key=f"add_{section_idx}") and new_task_name:
                    section.–∑–∞–¥–∞—á–∏.append(ProjectTask(
                        –Ω–∞–∑–≤–∞–Ω–∏–µ=new_task_name,
                        –ø—Ä–æ–≥—Ä–µ—Å—Å=new_task_progress
                    ))
                    project_service.save_project(project_name, project_data)
                    st.rerun()

            st.markdown("---")

        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        st.markdown("### üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        col1, col2, col3, col4, col5 = st.columns(5)

        with col1:
            global_progress = st.slider(
                "–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å", 0, 100,
                project_data.overall.–≥–ª–æ–±–∞–ª—å–Ω—ã–π_–ø—Ä–æ–≥—Ä–µ—Å—Å, key="global_progress"
            )
        with col2:
            stability = st.slider(
                "–ò–Ω–¥–µ–∫—Å —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏", 0, 100,
                project_data.overall.–∏–Ω–¥–µ–∫—Å_—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏, key="stability"
            )
        with col3:
            performance = st.number_input(
                "–ü—Ä–∏—Ä–æ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ %",
                value=project_data.overall.–ø—Ä–∏—Ä–æ—Å—Ç_–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, key="performance"
            )
        with col4:
            mobile_ready = st.checkbox(
                "–ú–æ–±–∏–ª—å–Ω–∞—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å",
                value=project_data.overall.–º–æ–±–∏–ª—å–Ω–∞—è_–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å, key="mobile_ready"
            )
        with col5:
            web_mode = st.selectbox(
                "–í–µ–±-—Ä–µ–∂–∏–º",
                ["‚úÖ Stable", "‚ö†Ô∏è IndexedDB unstable", "‚ùå Not supported"],
                index=["‚úÖ Stable", "‚ö†Ô∏è IndexedDB unstable", "‚ùå Not supported"].index(
                    project_data.overall.–≤–µ–±_—Ä–µ–∂–∏–º
                ) if project_data.overall.–≤–µ–±_—Ä–µ–∂–∏–º in ["‚úÖ Stable", "‚ö†Ô∏è IndexedDB unstable", "‚ùå Not supported"] else 1,
                key="web_mode"
            )

        project_data.overall.–≥–ª–æ–±–∞–ª—å–Ω—ã–π_–ø—Ä–æ–≥—Ä–µ—Å—Å = global_progress
        project_data.overall.–∏–Ω–¥–µ–∫—Å_—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ = stability
        project_data.overall.–ø—Ä–∏—Ä–æ—Å—Ç_–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ = performance
        project_data.overall.–º–æ–±–∏–ª—å–Ω–∞—è_–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å = mobile_ready
        project_data.overall.–≤–µ–±_—Ä–µ–∂–∏–º = web_mode

        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è", use_container_width=True):
            try:
                project_service.save_project(project_name, project_data)
                st.success("‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
            except DailyTrackerError as e:
                st.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")

    def render_empty_state(self) -> None:
        """–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        st.info("""
        ## üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤!

        –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
        - üìä **–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å** –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏
        - üéØ **–°–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã** –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤ –∏–ª–∏ —Å –Ω—É–ª—è
        - üìà **–í–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å** —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á
        - ‚úèÔ∏è **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å** –∑–∞–¥–∞—á–∏ —Å –ø–æ–ª–∑—É–Ω–∫–∞–º–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        - ‚ùå **–£–¥–∞–ª—è—Ç—å** –Ω–µ–Ω—É–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏

        **–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, —Å–æ–∑–¥–∞–π—Ç–µ –≤–∞—à –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏!**
        """)

    def show_projects_tab(self) -> None:
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏"""
        try:
            selected_project = self.render_sidebar()

            if selected_project:
                self.render_project_content(selected_project)
            else:
                if not project_service.list_projects():
                    self.render_empty_state()
                else:
                    st.info("üëà –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏")

        except Exception as e:
            st.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
projects_tab = ProjectsTab()