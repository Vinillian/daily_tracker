import streamlit as st
from pathlib import Path
from utils.file_utils import load_json, save_json, copy_template, ensure_dir
from utils.project_utils import get_project_tasks, get_project_sections

DATA_DIR = Path("data")
PROJECTS_DIR = DATA_DIR / "projects"
PROJECT_TEMPLATES_DIR = Path("templates/project_templates")

ensure_dir(PROJECTS_DIR)


def get_progress_emoji(progress):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
    if progress == 100:
        return "üü©"
    elif progress >= 80:
        return "üü®"
    elif progress >= 50:
        return "üüß"
    else:
        return "üü•"


def get_progress_bar(progress, width=20):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä"""
    filled = int(progress * width / 100)
    empty = width - filled
    return "‚ñà" * filled + "‚ñë" * empty


def get_section_status_emojis(tasks):
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —ç–º–æ–¥–∑–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ–∫—Ü–∏–∏"""
    emojis = []
    for task in tasks:
        progress = task.get('–ø—Ä–æ–≥—Ä–µ—Å—Å', 0)
        emojis.append(get_progress_emoji(progress))

    # –î–æ–ø–æ–ª–Ω—è–µ–º –¥–æ 5 —ç–º–æ–¥–∑–∏ –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
    while len(emojis) < 5:
        emojis.append("‚¨ú")

    return " ".join(emojis[:5])


def calculate_section_progress(tasks):
    """–í—ã—á–∏—Å–ª—è–µ—Ç —Å—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —Å–µ–∫—Ü–∏–∏"""
    if not tasks:
        return 0
    total = sum(task.get('–ø—Ä–æ–≥—Ä–µ—Å—Å', 0) for task in tasks)
    return total // len(tasks)


def show_project_dashboard(project_data, project_name):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥—ç—à–±–æ—Ä–¥ –ø—Ä–æ–µ–∫—Ç–∞"""

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    metadata = project_data.get('metadata', {})
    st.header(f"üöÄ {metadata.get('–Ω–∞–∑–≤–∞–Ω–∏–µ', project_name)} ‚Äî {metadata.get('–≤–µ—Ä—Å–∏—è', 'v1.0.0')}")
    st.caption(metadata.get('–æ–ø–∏—Å–∞–Ω–∏–µ', '–û–±–∑–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–µ–∫—Ç–∞'))

    # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
    sections = get_project_sections(project_data)

    for section_name, tasks in sections.items():
        section_progress = calculate_section_progress(tasks)
        status_emojis = get_section_status_emojis(tasks)

        st.markdown(f"### {section_name}")

        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å–µ–∫—Ü–∏–∏
        progress_bar = get_progress_bar(section_progress)
        st.markdown(f"`{progress_bar}` **{section_progress}%**")

        # –ó–∞–¥–∞—á–∏ —Å–µ–∫—Ü–∏–∏
        for task in tasks:
            task_name = task.get('–Ω–∞–∑–≤–∞–Ω–∏–µ', '')
            task_progress = task.get('–ø—Ä–æ–≥—Ä–µ—Å—Å', 0)
            emoji = get_progress_emoji(task_progress)

            # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É —Ç–æ—á–µ–∫ –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
            dots = "." * (40 - len(task_name))

            col1, col2 = st.columns([3, 1])
            with col1:
                st.write(f"{emoji} **{task_name}** {dots}")
            with col2:
                st.write(f"**{task_progress}%**")

        st.markdown("---")

    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    overall = project_data.get('overall', {})
    if overall:
        st.markdown("### üèÅ OVERALL PROJECT STATUS")

        # –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
        global_progress = overall.get('GLOBAL_PROGRESS', 0)
        st.markdown(f"**üìà GLOBAL PROGRESS:**    `{get_progress_bar(global_progress)}` {global_progress}%")

        # –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å
        stability = overall.get('STABILITY_INDEX', 0)
        st.markdown(f"**üß† STABILITY INDEX:**    `{get_progress_bar(stability)}` {stability}%")

        # –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        performance = overall.get('PERFORMANCE_BOOST', 0)
        st.markdown(f"**‚öôÔ∏è PERFORMANCE BOOST:**  {'üü©' * 5} +{performance}%")

        # –ú–æ–±–∏–ª—å–Ω–∞—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
        mobile_ready = overall.get('MOBILE_READY', False)
        mobile_status = "‚úÖ YES" if mobile_ready else "‚ùå NO"
        st.markdown(f"**üì± MOBILE READY:**       {mobile_status}")

        # –í–µ–±-—Ä–µ–∂–∏–º
        web_mode = overall.get('WEB_MODE', '')
        st.markdown(f"**üåê WEB MODE:**           {web_mode}")


def show_projects_tab():
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ —à–∞–±–ª–æ–Ω–æ–≤
    all_projects = sorted([f.stem for f in PROJECTS_DIR.glob("*.json")], reverse=True)
    project_template_files = sorted(PROJECT_TEMPLATES_DIR.glob("*.json"))
    project_template_names = [f.stem for f in project_template_files]

    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏
    st.sidebar.header("üìÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏")

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    st.sidebar.subheader("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç")

    # –í—ã–±–æ—Ä —Ç–∏–ø–∞ —Å–æ–∑–¥–∞–Ω–∏—è
    creation_type = st.sidebar.radio(
        "–¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞:",
        ["üìù –ü—É—Å—Ç–æ–π –ø—Ä–æ–µ–∫—Ç", "üéØ –ò–∑ —à–∞–±–ª–æ–Ω–∞"],
        key="project_creation_type"
    )

    new_project_name = st.sidebar.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞")

    if creation_type == "üéØ –ò–∑ —à–∞–±–ª–æ–Ω–∞":
        selected_template = st.sidebar.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω",
            project_template_names,
            key="template_selection"
        )

        if st.sidebar.button("üöÄ –°–æ–∑–¥–∞—Ç—å –∏–∑ —à–∞–±–ª–æ–Ω–∞", use_container_width=True):
            if new_project_name and selected_template:
                template_file = PROJECT_TEMPLATES_DIR / f"{selected_template}.json"
                new_project_file = PROJECTS_DIR / f"{new_project_name}.json"
                copy_template(template_file, new_project_file)
                st.sidebar.success(f"–ü—Ä–æ–µ–∫—Ç '{new_project_name}' —Å–æ–∑–¥–∞–Ω –∏–∑ —à–∞–±–ª–æ–Ω–∞ '{selected_template}'!")
                st.rerun()
            else:
                st.sidebar.error("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω")

    else:  # –ü—É—Å—Ç–æ–π –ø—Ä–æ–µ–∫—Ç
        if st.sidebar.button("üìÑ –°–æ–∑–¥–∞—Ç—å –ø—É—Å—Ç–æ–π –ø—Ä–æ–µ–∫—Ç", use_container_width=True):
            if new_project_name:
                empty_project = {
                    "metadata": {
                        "–Ω–∞–∑–≤–∞–Ω–∏–µ": new_project_name,
                        "–≤–µ—Ä—Å–∏—è": "v1.0.0",
                        "–¥–∞—Ç–∞": "{{–¥–∞—Ç–∞}}",
                        "–æ–ø–∏—Å–∞–Ω–∏–µ": "–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç"
                    },
                    "sections": [
                        {
                            "–Ω–∞–∑–≤–∞–Ω–∏–µ": "üìã –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
                            "–∑–∞–¥–∞—á–∏": [
                                {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π", "–ø—Ä–æ–≥—Ä–µ—Å—Å": 0},
                                {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã", "–ø—Ä–æ–≥—Ä–µ—Å—Å": 0}
                            ]
                        }
                    ]
                }
                new_project_file = PROJECTS_DIR / f"{new_project_name}.json"
                save_json(new_project_file, empty_project)
                st.sidebar.success(f"–ü—É—Å—Ç–æ–π –ø—Ä–æ–µ–∫—Ç '{new_project_name}' —Å–æ–∑–¥–∞–Ω!")
                st.rerun()
            else:
                st.sidebar.error("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")

    # –í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    st.sidebar.subheader("üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤")

    if not all_projects:
        st.sidebar.info("üìù –ü—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç!")
        selected_project = None
    else:
        selected_project = st.sidebar.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç",
            all_projects,
            key="project_selection"
        )

    # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
    if selected_project:
        project_file = PROJECTS_DIR / f"{selected_project}.json"
        project_data = load_json(project_file)

        # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –º–µ–∂–¥—É –¥—ç—à–±–æ—Ä–¥–æ–º –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        view_mode = st.radio(
            "–†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:",
            ["üìä –î—ç—à–±–æ—Ä–¥", "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"],
            horizontal=True,
            key=f"view_mode_{selected_project}"
        )

        if view_mode == "üìä –î—ç—à–±–æ—Ä–¥":
            show_project_dashboard(project_data, selected_project)
        else:
            # –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            st.subheader(f"‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {selected_project}")

            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
            metadata = project_data.get('metadata', {})
            st.markdown("### üìã –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞")
            col1, col2, col3 = st.columns(3)
            with col1:
                st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ", value=metadata.get('–Ω–∞–∑–≤–∞–Ω–∏–µ', ''), key="meta_name")
            with col2:
                st.text_input("–í–µ—Ä—Å–∏—è", value=metadata.get('–≤–µ—Ä—Å–∏—è', 'v1.0.0'), key="meta_version")
            with col3:
                st.text_input("–û–ø–∏—Å–∞–Ω–∏–µ", value=metadata.get('–æ–ø–∏—Å–∞–Ω–∏–µ', ''), key="meta_description")

            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–π –∏ –∑–∞–¥–∞—á
            sections = get_project_sections(project_data)

            for section_name, tasks in sections.items():
                st.markdown(f"### üìÅ {section_name}")

                for i, task in enumerate(tasks):
                    col1, col2 = st.columns([3, 1])
                    with col1:
                        st.text_input(
                            "–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏",
                            value=task['–Ω–∞–∑–≤–∞–Ω–∏–µ'],
                            key=f"task_{section_name}_{i}_name"
                        )
                    with col2:
                        new_progress = st.number_input(
                            "–ü—Ä–æ–≥—Ä–µ—Å—Å %",
                            min_value=0,
                            max_value=100,
                            value=task.get('–ø—Ä–æ–≥—Ä–µ—Å—Å', 0),
                            key=f"task_{section_name}_{i}_progress"
                        )

                    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –¥–∞–Ω–Ω—ã—Ö
                    task['–ø—Ä–æ–≥—Ä–µ—Å—Å'] = new_progress

            # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è", use_container_width=True):
                save_json(project_file, project_data)
                st.success("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

    else:
        # –≠–∫—Ä–∞–Ω –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
        if not all_projects:
            st.info("""
            ## üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤!

            –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
            - üìä **–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å** –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
            - üéØ **–°–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã** –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤ –∏–ª–∏ —Å –Ω—É–ª—è
            - üìà **–í–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å** —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á

            **–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, —Å–æ–∑–¥–∞–π—Ç–µ –≤–∞—à –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏!**
            """)
        else:
            st.info("üëà –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏")