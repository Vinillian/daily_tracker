import ast
import sys
from pathlib import Path


def check_file_syntax(file_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Ñ–∞–π–ª–∞"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            source_code = f.read()
        ast.parse(source_code)
        return True, None
    except SyntaxError as e:
        return False, f"–°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}"
    except Exception as e:
        return False, f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: {e}"


def check_imports():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã"""
    imports_to_check = [
        ("services.file_service", "file_service"),
        ("services.diary_service", "diary_service"),
        ("services.project_service", "project_service"),
        ("models.diary", "Day"),
        ("models.diary", "Task"),
        ("models.diary", "DayState"),
        ("models.projects", "Project"),
        ("ui.diary_tab", "diary_tab"),
        ("ui.projects_tab", "projects_tab")
    ]

    errors = []
    for module, obj in imports_to_check:
        try:
            exec(f"from {module} import {obj}")
            print(f"‚úÖ {module}.{obj}")
        except Exception as e:
            errors.append(f"‚ùå {module}.{obj}: {e}")
            print(f"‚ùå {module}.{obj}: {e}")

    return errors


if __name__ == "__main__":
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —Ñ–∞–π–ª–æ–≤...")

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ .py —Ñ–∞–π–ª—ã
    py_files = list(Path('.').rglob('*.py'))

    all_errors = []
    for file in py_files:
        if file.name == 'check_errors.py':
            continue

        is_ok, error = check_file_syntax(file)
        if not is_ok:
            all_errors.append(f"{file}: {error}")
            print(f"‚ùå {file}: {error}")
        else:
            print(f"‚úÖ {file}")

    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    import_errors = check_imports()
    all_errors.extend(import_errors)

    if all_errors:
        print(f"\nüö® –ù–∞–π–¥–µ–Ω–æ {len(all_errors)} –æ—à–∏–±–æ–∫:")
        for error in all_errors:
            print(f"  {error}")
    else:
        print("\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!")